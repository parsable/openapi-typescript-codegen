{{>header}}

import { BaseHttpRequest, {{{httpClientRequest}}} } from './core';
import type { OpenAPIConfig } from './core';
{{#if services}}
import {
{{#each services}}
    {{{name}}},
{{/each}}
} from './services';
{{/if}}

export class {{{clientName}}} {
{{#each services}}
    readonly {{{shortName}}}: {{{name}}};
{{/each}}
    readonly request: BaseHttpRequest;

    constructor(openApiConfig?: OpenAPIConfig, HttpRequest: new (config: OpenAPIConfig) => BaseHttpRequest = {{{httpClientRequest}}}) {
        this.request = new HttpRequest({
            BASE: openApiConfig?.BASE ?? '{{{server}}}',
            VERSION: openApiConfig?.VERSION ?? '{{{version}}}',
            WITH_CREDENTIALS: openApiConfig?.WITH_CREDENTIALS ?? false,
            TOKEN: openApiConfig?.TOKEN,
            USERNAME: openApiConfig?.USERNAME,
            PASSWORD: openApiConfig?.PASSWORD,
            HEADERS: openApiConfig?.HEADERS,
        });
        {{#each services}}
        this.{{{shortName}}} = new {{{name}}}(this.request);
        {{/each}}
    }
}
