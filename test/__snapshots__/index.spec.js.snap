// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`v2 should generate: ./test/generated/v2/core/ApiError.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from './ApiResult';

export class ApiError extends Error {
    public readonly url: string;
    public readonly status: number;
    public readonly statusText: string;
    public readonly body: any;

    constructor(response: ApiResult, message: string) {
        super(message);

        this.url = response.url;
        this.status = response.status;
        this.statusText = response.statusText;
        this.body = response.body;
    }
}"
`;

exports[`v2 should generate: ./test/generated/v2/core/ApiRequestOptions.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export type ApiRequestOptions = {
    readonly method: 'GET' | 'PUT' | 'POST' | 'DELETE' | 'OPTIONS' | 'HEAD' | 'PATCH';
    readonly path: string;
    readonly cookies?: Record<string, any>;
    readonly headers?: Record<string, any>;
    readonly query?: Record<string, any>;
    readonly formData?: Record<string, any>;
    readonly body?: any;
    readonly mediaType?: string;
    readonly responseHeader?: string;
    readonly errors?: Record<number, string>;
}"
`;

exports[`v2 should generate: ./test/generated/v2/core/ApiResult.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export type ApiResult<T = any> = {
    readonly url: string;
    readonly ok: boolean;
    readonly status: number;
    readonly statusText: string;
    readonly body: T;
}"
`;

exports[`v2 should generate: ./test/generated/v2/core/OpenAPI.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiRequestOptions } from './ApiRequestOptions';

type Resolver<T> = (options: ApiRequestOptions) => Promise<T>;
type Headers = Record<string, string>;

export type ClientConfig = {
    baseUrl?: string;
    version?: string;
    withCredentials?: boolean;
    token?: string | Resolver<string>;
    username?: string | Resolver<string>;
    password?: string | Resolver<string>;
    headers?: Headers | Resolver<Headers>;
}
export const OpenAPI: ClientConfig = {
    baseUrl: 'http://localhost:3000/base',
    version: '1.0',
    withCredentials: false,
    token: undefined,
    username: undefined,
    password: undefined,
    headers: undefined,
};
"
`;

exports[`v2 should generate: ./test/generated/v2/core/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export { ApiError } from './ApiError';
export type { ApiRequestOptions } from './ApiRequestOptions';
export type { ApiResult } from './ApiResult';
export { OpenAPI } from './OpenAPI';
export { request } from './request';
"
`;

exports[`v2 should generate: ./test/generated/v2/core/request.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { ApiError } from './ApiError';
import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';
import type { ClientConfig } from './OpenAPI';
import { OpenAPI } from './OpenAPI';

function isDefined<T>(value: T | null | undefined): value is Exclude<T, null | undefined> {
    return value !== undefined && value !== null;
}

function isString(value: any): value is string {
    return typeof value === 'string';
}

export function deepAssign(
    target: Record<string, unknown>,
    source: Record<string, unknown>,
): Record<string, unknown> {
    const keys = Object.keys(source);
    for (const k of keys) {
        const sourceValue: unknown = source[k];
        const targetValue: unknown = target[k];
        if (Object(sourceValue) === sourceValue && Object(targetValue) === targetValue) {
            target[k] = deepAssign(
                targetValue as Record<string, unknown>,
                sourceValue as Record<string, unknown>,
            );
        } else {
            target[k] = source[k];
        }
    }
    return target;
}

function isStringWithValue(value: any): value is string {
    return isString(value) && value !== '';
}

function isBlob(value: any): value is Blob {
    return value instanceof Blob;
}

function getQueryString(params: Record<string, any>): string {
    const qs: string[] = [];
    Object.keys(params).forEach(key => {
        const value = params[key];
        if (isDefined(value)) {
            if (Array.isArray(value)) {
                value.forEach(value => {
                    qs.push(\`\${encodeURIComponent(key)}=\${encodeURIComponent(String(value))}\`);
                });
            } else {
                qs.push(\`\${encodeURIComponent(key)}=\${encodeURIComponent(String(value))}\`);
            }
        }
    });
    if (qs.length > 0) {
        return \`?\${qs.join('&')}\`;
    }
    return '';
}

function getUrl(options: ApiRequestOptions, config: ClientConfig): string {
    const path = options.path.replace(/[:]/g, '_');
    const url = \`\${config.baseUrl}\${path}\`;

    if (options.query) {
        return \`\${url}\${getQueryString(options.query)}\`;
    }
    return url;
}

function getFormData(params: Record<string, any>): FormData {
    const formData = new FormData();
    Object.keys(params).forEach(key => {
        const value = params[key];
        if (isDefined(value)) {
            formData.append(key, value);
        }
    });
    return formData;
}

type Resolver<T> = (options: ApiRequestOptions) => Promise<T>;

async function resolve<T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> {
    if (typeof resolver === 'function') {
        return (resolver as Resolver<T>)(options);
    }
    return resolver;
}

async function getHeaders(options: ApiRequestOptions, config: ClientConfig): Promise<Headers> {
    const token = await resolve(options, config.token);
    const username = await resolve(options, config.username);
    const password = await resolve(options, config.password);
    const defaultHeaders = await resolve(options, config.headers);

    const headers = new Headers({
        Accept: 'application/json',
        ...defaultHeaders,
        ...options.headers,
    });

    if (isStringWithValue(token)) {
        headers.append('Authorization', \`Bearer \${token}\`);
    }

    if (isStringWithValue(username) && isStringWithValue(password)) {
        const credentials = btoa(\`\${username}:\${password}\`);
        headers.append('Authorization', \`Basic \${credentials}\`);
    }

    if (options.body) {
        if (options.mediaType) {
            headers.append('Content-Type', options.mediaType);
        } else if (isBlob(options.body)) {
            headers.append('Content-Type', options.body.type || 'application/octet-stream');
        } else if (isString(options.body)) {
            headers.append('Content-Type', 'text/plain');
        } else {
            headers.append('Content-Type', 'application/json');
        }
    }
    return headers;
}

function getRequestBody(options: ApiRequestOptions): BodyInit | undefined {
    if (options.formData) {
        return getFormData(options.formData);
    }
    if (options.body) {
        if (options.mediaType?.includes('/json')) {
            return JSON.stringify(options.body)
        } else if (isString(options.body) || isBlob(options.body)) {
            return options.body;
        } else {
            return JSON.stringify(options.body);
        }
    }
    return undefined;
}

async function sendRequest(options: ApiRequestOptions, config: ClientConfig, url: string): Promise<Response> {
    const request: RequestInit = {
        method: options.method,
        headers: await getHeaders(options, config),
        body: getRequestBody(options),
    };
    if (config.withCredentials) {
        request.credentials = 'include';
    }
    return await fetch(url, request);
}

function getResponseHeader(response: Response, responseHeader?: string): string | null {
    if (responseHeader) {
        const content = response.headers.get(responseHeader);
        if (isString(content)) {
            return content;
        }
    }
    return null;
}

async function getResponseBody(response: Response): Promise<any> {
    try {
        const contentType = response.headers.get('Content-Type');
        if (contentType) {
            const isJSON = contentType.toLowerCase().startsWith('application/json');
            if (isJSON) {
                return await response.json();
            } else {
                return await response.text();
            }
        }
    } catch (error) {
        console.error(error);
    }
    return null;
}

function catchErrors(options: ApiRequestOptions, result: ApiResult): void {
    const errors: Record<number, string> = {
        400: 'Bad Request',
        401: 'Unauthorized',
        403: 'Forbidden',
        404: 'Not Found',
        500: 'Internal Server Error',
        502: 'Bad Gateway',
        503: 'Service Unavailable',
        ...options.errors,
    }

    const error = errors[result.status];
    if (error) {
        throw new ApiError(result, error);
    }

    if (!result.ok) {
        throw new ApiError(result, 'Generic Error');
    }
}

/**
 * Request using fetch client
 * @param options The request options from the the service
 * @returns ApiResult
 * @throws ApiError
 */
export async function request(options: ApiRequestOptions): Promise<ApiResult> {
    const url = getUrl(options, OpenAPI);
    const response = await sendRequest(options, OpenAPI, url);
    const responseBody = await getResponseBody(response);
    const responseHeader = getResponseHeader(response, options.responseHeader);

    const result: ApiResult = {
        url,
        ok: response.ok,
        status: response.status,
        statusText: response.statusText,
        body: responseHeader || responseBody,
    };

    catchErrors(options, result);
    return result;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export * from './core';
export * from './models';
export * from './schemas';
export * from './services';

"
`;

exports[`v2 should generate: ./test/generated/v2/models/ArrayWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a simple array containing an array
 */
export type ArrayWithArray = Array<Array<ModelWithString>>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/ArrayWithBooleans.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with booleans
 */
export type ArrayWithBooleans = Array<boolean>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/ArrayWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with numbers
 */
export type ArrayWithNumbers = Array<number>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/ArrayWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with properties
 */
export type ArrayWithProperties = Array<{
    foo?: string,
    bar?: string,
}>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/ArrayWithReferences.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a simple array with references
 */
export type ArrayWithReferences = Array<ModelWithString>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/ArrayWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with strings
 */
export type ArrayWithStrings = Array<string>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/Date.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a type-only model that defines Date as a string
 */
export type Date = string;"
`;

exports[`v2 should generate: ./test/generated/v2/models/DictionaryWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a complex dictionary
 */
export type DictionaryWithArray = Record<string, Array<ModelWithString>>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/DictionaryWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a string dictionary
 */
export type DictionaryWithDictionary = Record<string, Record<string, string>>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/DictionaryWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a complex dictionary
 */
export type DictionaryWithProperties = Record<string, {
    foo?: string,
    bar?: string,
}>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/DictionaryWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a string reference
 */
export type DictionaryWithReference = Record<string, ModelWithString>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/DictionaryWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a string dictionary
 */
export type DictionaryWithString = Record<string, string>;"
`;

exports[`v2 should generate: ./test/generated/v2/models/EnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * Success=1,Warning=2,Error=3
 */
export enum EnumFromDescription {
    SUCCESS = 1,
    WARNING = 2,
    ERROR = 3,
}"
`;

exports[`v2 should generate: ./test/generated/v2/models/EnumWithExtensions.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple enum with numbers
 */
export enum EnumWithExtensions {
    /**
     * Used when the status of something is successful
     */
    CUSTOM_SUCCESS = 200,
    /**
     * Used when the status of something has a warning
     */
    CUSTOM_WARNING = 400,
    /**
     * Used when the status of something has an error
     */
    CUSTOM_ERROR = 500,
}"
`;

exports[`v2 should generate: ./test/generated/v2/models/EnumWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple enum with numbers
 */
export enum EnumWithNumbers {
    '_1' = 1,
    '_2' = 2,
    '_3' = 3,
    '_1.1' = 1.1,
    '_1.2' = 1.2,
    '_1.3' = 1.3,
    '_100' = 100,
    '_200' = 200,
    '_300' = 300,
    '_-100' = -100,
    '_-200' = -200,
    '_-300' = -300,
    '_-1.1' = -1.1,
    '_-1.2' = -1.2,
    '_-1.3' = -1.3,
}"
`;

exports[`v2 should generate: ./test/generated/v2/models/EnumWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple enum with strings
 */
export enum EnumWithStrings {
    SUCCESS = 'Success',
    WARNING = 'Warning',
    ERROR = 'Error',
}"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelThatExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model that extends another model
 */
export type ModelThatExtends = (ModelWithString & {
    propExtendsA?: string,
    propExtendsB?: ModelWithString,
});
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelThatExtendsExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelThatExtends } from './ModelThatExtends';
import type { ModelWithString } from './ModelWithString';

/**
 * This is a model that extends another model
 */
export type ModelThatExtendsExtends = (ModelWithString & ModelThatExtends & {
    propExtendsC?: string,
    propExtendsD?: ModelWithString,
});
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with one property containing an array
 */
export type ModelWithArray = {
    prop?: Array<ModelWithString>;
    propWithFile?: Array<Blob>;
    propWithNumber?: Array<number>;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one boolean property
 */
export type ModelWithBoolean = {
    /**
     * This is a simple boolean property
     */
    prop?: boolean;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithCircularReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one property containing a circular reference
 */
export type ModelWithCircularReference = {
    prop?: ModelWithCircularReference;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one property containing a dictionary
 */
export type ModelWithDictionary = {
    prop?: Record<string, string>;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithDuplicateImports.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with duplicated imports
 */
export type ModelWithDuplicateImports = {
    propA?: ModelWithString;
    propB?: ModelWithString;
    propC?: ModelWithString;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithDuplicateProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with duplicated properties
 */
export type ModelWithDuplicateProperties = {
    prop?: ModelWithString;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithEnum.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one enum
 */
export type ModelWithEnum = {
    /**
     * This is a simple enum with strings
     */
    test?: ModelWithEnum.test;
    /**
     * These are the HTTP error code enums
     */
    statusCode?: ModelWithEnum.statusCode;
    /**
     * Simple boolean enum
     */
    bool?: boolean;
}

export namespace ModelWithEnum {

    /**
     * This is a simple enum with strings
     */
    export enum test {
        SUCCESS = 'Success',
        WARNING = 'Warning',
        ERROR = 'Error',
    }

    /**
     * These are the HTTP error code enums
     */
    export enum statusCode {
        _100 = '100',
        _200_FOO = '200 FOO',
        _300_FOO_BAR = '300 FOO_BAR',
        _400_FOO_BAR = '400 foo-bar',
        _500_FOO_BAR = '500 foo.bar',
        _600_FOO_BAR = '600 foo&bar',
    }


}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithEnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one enum
 */
export type ModelWithEnumFromDescription = {
    /**
     * Success=1,Warning=2,Error=3
     */
    test?: ModelWithEnumFromDescription.test;
}

export namespace ModelWithEnumFromDescription {

    /**
     * Success=1,Warning=2,Error=3
     */
    export enum test {
        SUCCESS = 1,
        WARNING = 2,
        ERROR = 3,
    }


}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one number property
 */
export type ModelWithInteger = {
    /**
     * This is a simple number property
     */
    prop?: number;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithNestedEnums.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with nested enums
 */
export type ModelWithNestedEnums = {
    dictionaryWithEnum?: Record<string, 'Success' | 'Warning' | 'Error'>;
    dictionaryWithEnumFromDescription?: Record<string, 1 | 2 | 3>;
    arrayWithEnum?: Array<'Success' | 'Warning' | 'Error'>;
    arrayWithDescription?: Array<1 | 2 | 3>;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithNestedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one nested property
 */
export type ModelWithNestedProperties = {
    readonly first: {
        readonly second: {
            readonly third: string,
        },
    };
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithNullableString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one string property
 */
export type ModelWithNullableString = {
    /**
     * This is a simple string property
     */
    nullableProp?: string | null;
    /**
     * This is a simple string property
     */
    nullableRequiredProp: string | null;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithOrderedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with ordered properties
 */
export type ModelWithOrderedProperties = {
    zebra?: string;
    apple?: string;
    hawaii?: string;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model that contains a some patterns
 */
export type ModelWithPattern = {
    key: string;
    name: string;
    readonly enabled?: boolean;
    readonly modified?: string;
    id?: string;
    text?: string;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with one nested property
 */
export type ModelWithProperties = {
    required: string;
    readonly requiredAndReadOnly: string;
    string?: string;
    number?: number;
    boolean?: boolean;
    reference?: ModelWithString;
    'property with space'?: string;
    default?: string;
    try?: string;
    readonly '@namespace.string'?: string;
    readonly '@namespace.integer'?: number;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithProperties } from './ModelWithProperties';

/**
 * This is a model with one property containing a reference
 */
export type ModelWithReference = {
    prop?: ModelWithProperties;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one string property
 */
export type ModelWithString = {
    /**
     * This is a simple string property
     */
    prop?: string;
}
"
`;

exports[`v2 should generate: ./test/generated/v2/models/MultilineComment.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * Testing multiline comments.
 * This must go to the next line.
 *
 * This will contain a break.
 */
export type MultilineComment = number;"
`;

exports[`v2 should generate: ./test/generated/v2/models/SimpleBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple boolean
 */
export type SimpleBoolean = boolean;"
`;

exports[`v2 should generate: ./test/generated/v2/models/SimpleFile.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple file
 */
export type SimpleFile = Blob;"
`;

exports[`v2 should generate: ./test/generated/v2/models/SimpleInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple number
 */
export type SimpleInteger = number;"
`;

exports[`v2 should generate: ./test/generated/v2/models/SimpleReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a simple reference
 */
export type SimpleReference = ModelWithString;"
`;

exports[`v2 should generate: ./test/generated/v2/models/SimpleString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple string
 */
export type SimpleString = string;"
`;

exports[`v2 should generate: ./test/generated/v2/models/SimpleStringWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple string
 */
export type SimpleStringWithPattern = string;"
`;

exports[`v2 should generate: ./test/generated/v2/models/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export type { ArrayWithArray } from './ArrayWithArray';
export type { ArrayWithBooleans } from './ArrayWithBooleans';
export type { ArrayWithNumbers } from './ArrayWithNumbers';
export type { ArrayWithProperties } from './ArrayWithProperties';
export type { ArrayWithReferences } from './ArrayWithReferences';
export type { ArrayWithStrings } from './ArrayWithStrings';
export type { Date } from './Date';
export type { DictionaryWithArray } from './DictionaryWithArray';
export type { DictionaryWithDictionary } from './DictionaryWithDictionary';
export type { DictionaryWithProperties } from './DictionaryWithProperties';
export type { DictionaryWithReference } from './DictionaryWithReference';
export type { DictionaryWithString } from './DictionaryWithString';
export { EnumFromDescription } from './EnumFromDescription';
export { EnumWithExtensions } from './EnumWithExtensions';
export { EnumWithNumbers } from './EnumWithNumbers';
export { EnumWithStrings } from './EnumWithStrings';
export type { ModelThatExtends } from './ModelThatExtends';
export type { ModelThatExtendsExtends } from './ModelThatExtendsExtends';
export type { ModelWithArray } from './ModelWithArray';
export type { ModelWithBoolean } from './ModelWithBoolean';
export type { ModelWithCircularReference } from './ModelWithCircularReference';
export type { ModelWithDictionary } from './ModelWithDictionary';
export type { ModelWithDuplicateImports } from './ModelWithDuplicateImports';
export type { ModelWithDuplicateProperties } from './ModelWithDuplicateProperties';
export type { ModelWithEnum } from './ModelWithEnum';
export type { ModelWithEnumFromDescription } from './ModelWithEnumFromDescription';
export type { ModelWithInteger } from './ModelWithInteger';
export type { ModelWithNestedEnums } from './ModelWithNestedEnums';
export type { ModelWithNestedProperties } from './ModelWithNestedProperties';
export type { ModelWithNullableString } from './ModelWithNullableString';
export type { ModelWithOrderedProperties } from './ModelWithOrderedProperties';
export type { ModelWithPattern } from './ModelWithPattern';
export type { ModelWithProperties } from './ModelWithProperties';
export type { ModelWithReference } from './ModelWithReference';
export type { ModelWithString } from './ModelWithString';
export type { MultilineComment } from './MultilineComment';
export type { SimpleBoolean } from './SimpleBoolean';
export type { SimpleFile } from './SimpleFile';
export type { SimpleInteger } from './SimpleInteger';
export type { SimpleReference } from './SimpleReference';
export type { SimpleString } from './SimpleString';
export type { SimpleStringWithPattern } from './SimpleStringWithPattern';
"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ArrayWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithArray = {
    type: 'array',
    contains: {
        type: 'array',
        contains: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ArrayWithBooleans.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithBooleans = {
    type: 'array',
    contains: {
        type: 'boolean',
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ArrayWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithNumbers = {
    type: 'array',
    contains: {
        type: 'number',
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ArrayWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithProperties = {
    type: 'array',
    contains: {
        properties: {
            foo: {
                type: 'string',
            },
            bar: {
                type: 'string',
            },
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ArrayWithReferences.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithReferences = {
    type: 'array',
    contains: {
        type: 'ModelWithString',
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ArrayWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithStrings = {
    type: 'array',
    contains: {
        type: 'string',
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$Date.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $Date = {
    type: 'string',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$DictionaryWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithArray = {
    type: 'dictionary',
    contains: {
        type: 'array',
        contains: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$DictionaryWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithDictionary = {
    type: 'dictionary',
    contains: {
        type: 'dictionary',
        contains: {
            type: 'string',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$DictionaryWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithProperties = {
    type: 'dictionary',
    contains: {
        properties: {
            foo: {
                type: 'string',
            },
            bar: {
                type: 'string',
            },
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$DictionaryWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithReference = {
    type: 'dictionary',
    contains: {
        type: 'ModelWithString',
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$DictionaryWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithString = {
    type: 'dictionary',
    contains: {
        type: 'string',
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$EnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumFromDescription = {
    type: 'Enum',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$EnumWithExtensions.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumWithExtensions = {
    type: 'Enum',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$EnumWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumWithNumbers = {
    type: 'Enum',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$EnumWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumWithStrings = {
    type: 'Enum',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelThatExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelThatExtends = {
    type: 'all-of',
    contains: [{
        type: 'ModelWithString',
    }, {
        properties: {
            propExtendsA: {
                type: 'string',
            },
            propExtendsB: {
                type: 'ModelWithString',
            },
        },
    }],
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelThatExtendsExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelThatExtendsExtends = {
    type: 'all-of',
    contains: [{
        type: 'ModelWithString',
    }, {
        type: 'ModelThatExtends',
    }, {
        properties: {
            propExtendsC: {
                type: 'string',
            },
            propExtendsD: {
                type: 'ModelWithString',
            },
        },
    }],
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithArray = {
    properties: {
        prop: {
            type: 'array',
            contains: {
                type: 'ModelWithString',
            },
        },
        propWithFile: {
            type: 'array',
            contains: {
                type: 'File',
            },
        },
        propWithNumber: {
            type: 'array',
            contains: {
                type: 'number',
            },
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithBoolean = {
    properties: {
        prop: {
            type: 'boolean',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithCircularReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithCircularReference = {
    properties: {
        prop: {
            type: 'ModelWithCircularReference',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithDictionary = {
    properties: {
        prop: {
            type: 'dictionary',
            contains: {
                type: 'string',
            },
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithDuplicateImports.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithDuplicateImports = {
    properties: {
        propA: {
            type: 'ModelWithString',
        },
        propB: {
            type: 'ModelWithString',
        },
        propC: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithDuplicateProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithDuplicateProperties = {
    properties: {
        prop: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithEnum.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithEnum = {
    properties: {
        test: {
            type: 'Enum',
        },
        statusCode: {
            type: 'Enum',
        },
        bool: {
            type: 'boolean',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithEnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithEnumFromDescription = {
    properties: {
        test: {
            type: 'Enum',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithInteger = {
    properties: {
        prop: {
            type: 'number',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithNestedEnums.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithNestedEnums = {
    properties: {
        dictionaryWithEnum: {
            type: 'dictionary',
            contains: {
                type: 'Enum',
            },
        },
        dictionaryWithEnumFromDescription: {
            type: 'dictionary',
            contains: {
                type: 'Enum',
            },
        },
        arrayWithEnum: {
            type: 'array',
            contains: {
                type: 'Enum',
            },
        },
        arrayWithDescription: {
            type: 'array',
            contains: {
                type: 'Enum',
            },
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithNestedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithNestedProperties = {
    properties: {
        first: {
            properties: {
                second: {
                    properties: {
                        third: {
                            type: 'string',
                            isReadOnly: true,
                            isRequired: true,
                        },
                    },
                    isReadOnly: true,
                    isRequired: true,
                },
            },
            isReadOnly: true,
            isRequired: true,
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithNullableString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithNullableString = {
    properties: {
        nullableProp: {
            type: 'string',
            isNullable: true,
        },
        nullableRequiredProp: {
            type: 'string',
            isRequired: true,
            isNullable: true,
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithOrderedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithOrderedProperties = {
    properties: {
        zebra: {
            type: 'string',
        },
        apple: {
            type: 'string',
        },
        hawaii: {
            type: 'string',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithPattern = {
    properties: {
        key: {
            type: 'string',
            isRequired: true,
            maxLength: 64,
            pattern: '^[a-zA-Z0-9_]*$',
        },
        name: {
            type: 'string',
            isRequired: true,
            maxLength: 255,
        },
        enabled: {
            type: 'boolean',
            isReadOnly: true,
        },
        modified: {
            type: 'string',
            isReadOnly: true,
            format: 'date-time',
        },
        id: {
            type: 'string',
            pattern: '^\\\\\\\\d{2}-\\\\\\\\d{3}-\\\\\\\\d{4}$',
        },
        text: {
            type: 'string',
            pattern: '^\\\\\\\\w+$',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithProperties = {
    properties: {
        required: {
            type: 'string',
            isRequired: true,
        },
        requiredAndReadOnly: {
            type: 'string',
            isReadOnly: true,
            isRequired: true,
        },
        string: {
            type: 'string',
        },
        number: {
            type: 'number',
        },
        boolean: {
            type: 'boolean',
        },
        reference: {
            type: 'ModelWithString',
        },
        'property with space': {
            type: 'string',
        },
        default: {
            type: 'string',
        },
        try: {
            type: 'string',
        },
        '@namespace.string': {
            type: 'string',
            isReadOnly: true,
        },
        '@namespace.integer': {
            type: 'number',
            isReadOnly: true,
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithReference = {
    properties: {
        prop: {
            type: 'ModelWithProperties',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$ModelWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithString = {
    properties: {
        prop: {
            type: 'string',
        },
    },
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$MultilineComment.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $MultilineComment = {
    type: 'number',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$SimpleBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleBoolean = {
    type: 'boolean',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$SimpleFile.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleFile = {
    type: 'File',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$SimpleInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleInteger = {
    type: 'number',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$SimpleReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleReference = {
    type: 'ModelWithString',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$SimpleString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleString = {
    type: 'string',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/$SimpleStringWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleStringWithPattern = {
    type: 'string',
    maxLength: 64,
    pattern: '^[a-zA-Z0-9_]*$',
};"
`;

exports[`v2 should generate: ./test/generated/v2/schemas/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export { $ArrayWithArray } from './$ArrayWithArray';
export { $ArrayWithBooleans } from './$ArrayWithBooleans';
export { $ArrayWithNumbers } from './$ArrayWithNumbers';
export { $ArrayWithProperties } from './$ArrayWithProperties';
export { $ArrayWithReferences } from './$ArrayWithReferences';
export { $ArrayWithStrings } from './$ArrayWithStrings';
export { $Date } from './$Date';
export { $DictionaryWithArray } from './$DictionaryWithArray';
export { $DictionaryWithDictionary } from './$DictionaryWithDictionary';
export { $DictionaryWithProperties } from './$DictionaryWithProperties';
export { $DictionaryWithReference } from './$DictionaryWithReference';
export { $DictionaryWithString } from './$DictionaryWithString';
export { $EnumFromDescription } from './$EnumFromDescription';
export { $EnumWithExtensions } from './$EnumWithExtensions';
export { $EnumWithNumbers } from './$EnumWithNumbers';
export { $EnumWithStrings } from './$EnumWithStrings';
export { $ModelThatExtends } from './$ModelThatExtends';
export { $ModelThatExtendsExtends } from './$ModelThatExtendsExtends';
export { $ModelWithArray } from './$ModelWithArray';
export { $ModelWithBoolean } from './$ModelWithBoolean';
export { $ModelWithCircularReference } from './$ModelWithCircularReference';
export { $ModelWithDictionary } from './$ModelWithDictionary';
export { $ModelWithDuplicateImports } from './$ModelWithDuplicateImports';
export { $ModelWithDuplicateProperties } from './$ModelWithDuplicateProperties';
export { $ModelWithEnum } from './$ModelWithEnum';
export { $ModelWithEnumFromDescription } from './$ModelWithEnumFromDescription';
export { $ModelWithInteger } from './$ModelWithInteger';
export { $ModelWithNestedEnums } from './$ModelWithNestedEnums';
export { $ModelWithNestedProperties } from './$ModelWithNestedProperties';
export { $ModelWithNullableString } from './$ModelWithNullableString';
export { $ModelWithOrderedProperties } from './$ModelWithOrderedProperties';
export { $ModelWithPattern } from './$ModelWithPattern';
export { $ModelWithProperties } from './$ModelWithProperties';
export { $ModelWithReference } from './$ModelWithReference';
export { $ModelWithString } from './$ModelWithString';
export { $MultilineComment } from './$MultilineComment';
export { $SimpleBoolean } from './$SimpleBoolean';
export { $SimpleFile } from './$SimpleFile';
export { $SimpleInteger } from './$SimpleInteger';
export { $SimpleReference } from './$SimpleReference';
export { $SimpleString } from './$SimpleString';
export { $SimpleStringWithPattern } from './$SimpleStringWithPattern';
"
`;

exports[`v2 should generate: ./test/generated/v2/services/CollectionFormatService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { CollectionFormatServiceFull } from './CollectionFormatServiceFull';

export class CollectionFormatService {

    /**
     * @param parameterArrayCsv This is an array parameter that is send as csv format (comma-separated values)
     * @param parameterArraySsv This is an array parameter that is send as ssv format (space-separated values)
     * @param parameterArrayTsv This is an array parameter that is send as tsv format (tab-separated values)
     * @param parameterArrayPipes This is an array parameter that is send as pipes format (pipe-separated values)
     * @param parameterArrayMulti This is an array parameter that is send as multi format (multiple parameter instances)

     * @throws ApiError
     */
    public static async collectionFormat(
        parameterArrayCsv: Array<string>,
        parameterArraySsv: Array<string>,
        parameterArrayTsv: Array<string>,
        parameterArrayPipes: Array<string>,
        parameterArrayMulti: Array<string>,

    ): Promise<void> {
        return (await CollectionFormatServiceFull.collectionFormat(
            parameterArrayCsv, parameterArraySsv, parameterArrayTsv, parameterArrayPipes, parameterArrayMulti,
        )).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/CollectionFormatServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class CollectionFormatServiceFull {

    /**
     * @param parameterArrayCsv This is an array parameter that is send as csv format (comma-separated values)
     * @param parameterArraySsv This is an array parameter that is send as ssv format (space-separated values)
     * @param parameterArrayTsv This is an array parameter that is send as tsv format (tab-separated values)
     * @param parameterArrayPipes This is an array parameter that is send as pipes format (pipe-separated values)
     * @param parameterArrayMulti This is an array parameter that is send as multi format (multiple parameter instances)

     * @throws ApiError
     */
    public static async collectionFormat(
        parameterArrayCsv: Array<string>,
        parameterArraySsv: Array<string>,
        parameterArrayTsv: Array<string>,
        parameterArrayPipes: Array<string>,
        parameterArrayMulti: Array<string>,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/collectionFormat\`,
            query: {
                'parameterArrayCSV': parameterArrayCsv,
                'parameterArraySSV': parameterArraySsv,
                'parameterArrayTSV': parameterArrayTsv,
                'parameterArrayPipes': parameterArrayPipes,
                'parameterArrayMulti': parameterArrayMulti,
            },
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/ComplexService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import { ComplexServiceFull } from './ComplexServiceFull';

export class ComplexService {

    /**
     * @param parameterObject Parameter containing object
     * @param parameterReference Parameter containing reference

     * @returns ModelWithString Successful response
     * @throws ApiError
     */
    public static async complexTypes(
        parameterObject: {
            first?: {
                second?: {
                    third?: string,
                },
            },
        },
        parameterReference: ModelWithString,

    ): Promise<Array<ModelWithString>> {
        return (await ComplexServiceFull.complexTypes(
            parameterObject, parameterReference,
        )).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/ComplexServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class ComplexServiceFull {

    /**
     * @param parameterObject Parameter containing object
     * @param parameterReference Parameter containing reference

     * @returns ModelWithString Successful response
     * @throws ApiError
     */
    public static async complexTypes(
        parameterObject: {
            first?: {
                second?: {
                    third?: string,
                },
            },
        },
        parameterReference: ModelWithString,

    ): Promise<ApiResult<Array<ModelWithString>>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/complex\`,
            query: {
                'parameterObject': parameterObject,
                'parameterReference': parameterReference,
            },
            errors: {
                400: \`400 server error\`,
                500: \`500 server error\`,
            },
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/DefaultsService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import { DefaultsServiceFull } from './DefaultsServiceFull';

export class DefaultsService {

    /**
     * @param parameterString This is a simple string with default value
     * @param parameterNumber This is a simple number with default value
     * @param parameterBoolean This is a simple boolean with default value
     * @param parameterEnum This is a simple enum with default value
     * @param parameterModel This is a simple model with default value

     * @throws ApiError
     */
    public static async callWithDefaultParameters(
        parameterString: string = 'Hello World!',
        parameterNumber: number = 123,
        parameterBoolean: boolean = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<void> {
        return (await DefaultsServiceFull.callWithDefaultParameters(
            parameterString, parameterNumber, parameterBoolean, parameterEnum, parameterModel,
        )).body;
    }

    /**
     * @param parameterString This is a simple string that is optional with default value
     * @param parameterNumber This is a simple number that is optional with default value
     * @param parameterBoolean This is a simple boolean that is optional with default value
     * @param parameterEnum This is a simple enum that is optional with default value
     * @param parameterModel This is a simple model that is optional with default value

     * @throws ApiError
     */
    public static async callWithDefaultOptionalParameters(
        parameterString: string = 'Hello World!',
        parameterNumber: number = 123,
        parameterBoolean: boolean = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<void> {
        return (await DefaultsServiceFull.callWithDefaultOptionalParameters(
            parameterString, parameterNumber, parameterBoolean, parameterEnum, parameterModel,
        )).body;
    }

    /**
     * @param parameterStringWithNoDefault This is a string with no default
     * @param parameterOptionalStringWithDefault This is a optional string with default
     * @param parameterOptionalStringWithEmptyDefault This is a optional string with empty default
     * @param parameterOptionalStringWithNoDefault This is a optional string with no default
     * @param parameterStringWithDefault This is a string with default
     * @param parameterStringWithEmptyDefault This is a string with empty default

     * @throws ApiError
     */
    public static async callToTestOrderOfParams(
        parameterStringWithNoDefault: string,
        parameterOptionalStringWithDefault: string = 'Hello World!',
        parameterOptionalStringWithEmptyDefault: string = '',
        parameterOptionalStringWithNoDefault?: string,
        parameterStringWithDefault: string = 'Hello World!',
        parameterStringWithEmptyDefault: string = '',

    ): Promise<void> {
        return (await DefaultsServiceFull.callToTestOrderOfParams(
            parameterStringWithNoDefault, parameterOptionalStringWithDefault, parameterOptionalStringWithEmptyDefault, parameterOptionalStringWithNoDefault, parameterStringWithDefault, parameterStringWithEmptyDefault,
        )).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/DefaultsServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class DefaultsServiceFull {

    /**
     * @param parameterString This is a simple string with default value
     * @param parameterNumber This is a simple number with default value
     * @param parameterBoolean This is a simple boolean with default value
     * @param parameterEnum This is a simple enum with default value
     * @param parameterModel This is a simple model with default value

     * @throws ApiError
     */
    public static async callWithDefaultParameters(
        parameterString: string = 'Hello World!',
        parameterNumber: number = 123,
        parameterBoolean: boolean = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/defaults\`,
            query: {
                'parameterString': parameterString,
                'parameterNumber': parameterNumber,
                'parameterBoolean': parameterBoolean,
                'parameterEnum': parameterEnum,
                'parameterModel': parameterModel,
            },
        });
    }

    /**
     * @param parameterString This is a simple string that is optional with default value
     * @param parameterNumber This is a simple number that is optional with default value
     * @param parameterBoolean This is a simple boolean that is optional with default value
     * @param parameterEnum This is a simple enum that is optional with default value
     * @param parameterModel This is a simple model that is optional with default value

     * @throws ApiError
     */
    public static async callWithDefaultOptionalParameters(
        parameterString: string = 'Hello World!',
        parameterNumber: number = 123,
        parameterBoolean: boolean = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/defaults\`,
            query: {
                'parameterString': parameterString,
                'parameterNumber': parameterNumber,
                'parameterBoolean': parameterBoolean,
                'parameterEnum': parameterEnum,
                'parameterModel': parameterModel,
            },
        });
    }

    /**
     * @param parameterStringWithNoDefault This is a string with no default
     * @param parameterOptionalStringWithDefault This is a optional string with default
     * @param parameterOptionalStringWithEmptyDefault This is a optional string with empty default
     * @param parameterOptionalStringWithNoDefault This is a optional string with no default
     * @param parameterStringWithDefault This is a string with default
     * @param parameterStringWithEmptyDefault This is a string with empty default

     * @throws ApiError
     */
    public static async callToTestOrderOfParams(
        parameterStringWithNoDefault: string,
        parameterOptionalStringWithDefault: string = 'Hello World!',
        parameterOptionalStringWithEmptyDefault: string = '',
        parameterOptionalStringWithNoDefault?: string,
        parameterStringWithDefault: string = 'Hello World!',
        parameterStringWithEmptyDefault: string = '',

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/defaults\`,
            query: {
                'parameterStringWithNoDefault': parameterStringWithNoDefault,
                'parameterOptionalStringWithDefault': parameterOptionalStringWithDefault,
                'parameterOptionalStringWithEmptyDefault': parameterOptionalStringWithEmptyDefault,
                'parameterOptionalStringWithNoDefault': parameterOptionalStringWithNoDefault,
                'parameterStringWithDefault': parameterStringWithDefault,
                'parameterStringWithEmptyDefault': parameterStringWithEmptyDefault,
            },
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/DuplicateService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { DuplicateServiceFull } from './DuplicateServiceFull';

export class DuplicateService {

    /**

     * @throws ApiError
     */
    public static async duplicateName(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName()).body;
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName1(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName1()).body;
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName2(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName2()).body;
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName3(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName3()).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/DuplicateServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class DuplicateServiceFull {

    /**

     * @throws ApiError
     */
    public static async duplicateName(): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName1(): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName2(): Promise<ApiResult<void>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName3(): Promise<ApiResult<void>> {
        return __request({
            method: 'DELETE',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/HeaderService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { HeaderServiceFull } from './HeaderServiceFull';

export class HeaderService {

    /**

     * @returns string Successful response
     * @throws ApiError
     */
    public static async callWithResultFromHeader(): Promise<string> {
        return (await HeaderServiceFull.callWithResultFromHeader()).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/HeaderServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class HeaderServiceFull {

    /**

     * @returns string Successful response
     * @throws ApiError
     */
    public static async callWithResultFromHeader(): Promise<ApiResult<string>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/header\`,
            responseHeader: 'operation-location',
            errors: {
                400: \`400 server error\`,
                500: \`500 server error\`,
            },
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/NoContentService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { NoContentServiceFull } from './NoContentServiceFull';

export class NoContentService {

    /**

     * @returns void
     * @throws ApiError
     */
    public static async callWithNoContentResponse(): Promise<void> {
        return (await NoContentServiceFull.callWithNoContentResponse()).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/NoContentServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class NoContentServiceFull {

    /**

     * @returns void
     * @throws ApiError
     */
    public static async callWithNoContentResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/no-content\`,
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/ParametersService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { ParametersServiceFull } from './ParametersServiceFull';

export class ParametersService {

    /**
     * @param parameterHeader This is the parameter that goes into the header
     * @param parameterQuery This is the parameter that goes into the query params
     * @param parameterForm This is the parameter that goes into the form data
     * @param parameterBody This is the parameter that is send as request body
     * @param parameterPath This is the parameter that goes into the path

     * @throws ApiError
     */
    public static async callWithParameters(
        parameterHeader: string,
        parameterQuery: string,
        parameterForm: string,
        parameterBody: string,
        parameterPath: string,

    ): Promise<void> {
        return (await ParametersServiceFull.callWithParameters(
            parameterHeader, parameterQuery, parameterForm, parameterBody, parameterPath,
        )).body;
    }

    /**
     * @param parameterHeader This is the parameter that goes into the request header
     * @param parameterQuery This is the parameter that goes into the request query params
     * @param parameterForm This is the parameter that goes into the request form data
     * @param parameterBody This is the parameter that is send as request body
     * @param parameterPath1 This is the parameter that goes into the path
     * @param parameterPath2 This is the parameter that goes into the path
     * @param parameterPath3 This is the parameter that goes into the path
     * @param _default This is the parameter with a reserved keyword

     * @throws ApiError
     */
    public static async callWithWeirdParameterNames(
        parameterHeader: string,
        parameterQuery: string,
        parameterForm: string,
        parameterBody: string,
        parameterPath1?: string,
        parameterPath2?: string,
        parameterPath3?: string,
        _default?: string,

    ): Promise<void> {
        return (await ParametersServiceFull.callWithWeirdParameterNames(
            parameterHeader, parameterQuery, parameterForm, parameterBody, parameterPath1, parameterPath2, parameterPath3, _default,
        )).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/ParametersServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class ParametersServiceFull {

    /**
     * @param parameterHeader This is the parameter that goes into the header
     * @param parameterQuery This is the parameter that goes into the query params
     * @param parameterForm This is the parameter that goes into the form data
     * @param parameterBody This is the parameter that is send as request body
     * @param parameterPath This is the parameter that goes into the path

     * @throws ApiError
     */
    public static async callWithParameters(
        parameterHeader: string,
        parameterQuery: string,
        parameterForm: string,
        parameterBody: string,
        parameterPath: string,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/parameters/\${parameterPath}\`,
            headers: {
                'parameterHeader': parameterHeader,
            },
            query: {
                'parameterQuery': parameterQuery,
            },
            formData: {
                'parameterForm': parameterForm,
            },
            body: parameterBody,
        });
    }

    /**
     * @param parameterHeader This is the parameter that goes into the request header
     * @param parameterQuery This is the parameter that goes into the request query params
     * @param parameterForm This is the parameter that goes into the request form data
     * @param parameterBody This is the parameter that is send as request body
     * @param parameterPath1 This is the parameter that goes into the path
     * @param parameterPath2 This is the parameter that goes into the path
     * @param parameterPath3 This is the parameter that goes into the path
     * @param _default This is the parameter with a reserved keyword

     * @throws ApiError
     */
    public static async callWithWeirdParameterNames(
        parameterHeader: string,
        parameterQuery: string,
        parameterForm: string,
        parameterBody: string,
        parameterPath1?: string,
        parameterPath2?: string,
        parameterPath3?: string,
        _default?: string,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/parameters/\${parameterPath1}/\${parameterPath2}/\${parameterPath3}\`,
            headers: {
                'parameter.header': parameterHeader,
            },
            query: {
                'parameter-query': parameterQuery,
                'default': _default,
            },
            formData: {
                'parameter_form': parameterForm,
            },
            body: parameterBody,
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/ResponseService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelThatExtends,
    ModelThatExtendsExtends,
    ModelWithString,
} from '../models';
import { ResponseServiceFull } from './ResponseServiceFull';

export class ResponseService {

    /**

     * @returns ModelWithString Message for default response
     * @throws ApiError
     */
    public static async callWithResponse(): Promise<ModelWithString> {
        return (await ResponseServiceFull.callWithResponse()).body;
    }

    /**

     * @returns ModelWithString Message for default response
     * @throws ApiError
     */
    public static async callWithDuplicateResponses(): Promise<ModelWithString> {
        return (await ResponseServiceFull.callWithDuplicateResponses()).body;
    }

    /**

     * @returns any Message for 200 response
     * @returns ModelWithString Message for default response
     * @returns ModelThatExtends Message for 201 response
     * @returns ModelThatExtendsExtends Message for 202 response
     * @throws ApiError
     */
    public static async callWithResponses(): Promise<{
        readonly '@namespace.string'?: string,
        readonly '@namespace.integer'?: number,
        readonly value?: Array<ModelWithString>,
    } | ModelWithString | ModelThatExtends | ModelThatExtendsExtends> {
        return (await ResponseServiceFull.callWithResponses()).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/ResponseServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelThatExtends,
    ModelThatExtendsExtends,
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class ResponseServiceFull {

    /**

     * @returns ModelWithString Message for default response
     * @throws ApiError
     */
    public static async callWithResponse(): Promise<ApiResult<ModelWithString>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/response\`,
        });
    }

    /**

     * @returns ModelWithString Message for default response
     * @throws ApiError
     */
    public static async callWithDuplicateResponses(): Promise<ApiResult<ModelWithString>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/response\`,
            errors: {
                500: \`Message for 500 error\`,
                501: \`Message for 501 error\`,
                502: \`Message for 502 error\`,
            },
        });
    }

    /**

     * @returns any Message for 200 response
     * @returns ModelWithString Message for default response
     * @returns ModelThatExtends Message for 201 response
     * @returns ModelThatExtendsExtends Message for 202 response
     * @throws ApiError
     */
    public static async callWithResponses(): Promise<ApiResult<{
        readonly '@namespace.string'?: string,
        readonly '@namespace.integer'?: number,
        readonly value?: Array<ModelWithString>,
    } | ModelWithString | ModelThatExtends | ModelThatExtendsExtends>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/response\`,
            errors: {
                500: \`Message for 500 error\`,
                501: \`Message for 501 error\`,
                502: \`Message for 502 error\`,
            },
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/SimpleService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { SimpleServiceFull } from './SimpleServiceFull';

export class SimpleService {

    /**

     * @throws ApiError
     */
    public static async getCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.getCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async putCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.putCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async postCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.postCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async deleteCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.deleteCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async optionsCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.optionsCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async headCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.headCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async patchCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.patchCallWithoutParametersAndResponse()).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/SimpleServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class SimpleServiceFull {

    /**

     * @throws ApiError
     */
    public static async getCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async putCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async postCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async deleteCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'DELETE',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async optionsCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'OPTIONS',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async headCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'HEAD',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async patchCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'PATCH',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/TypesService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { TypesServiceFull } from './TypesServiceFull';

export class TypesService {

    /**
     * @param parameterArray This is an array parameter
     * @param parameterDictionary This is a dictionary parameter
     * @param parameterEnum This is an enum parameter
     * @param parameterNumber This is a number parameter
     * @param parameterString This is a string parameter
     * @param parameterBoolean This is a boolean parameter
     * @param parameterObject This is an object parameter
     * @param id This is a number parameter

     * @returns number Response is a simple number
     * @returns string Response is a simple string
     * @returns boolean Response is a simple boolean
     * @returns any Response is a simple object
     * @throws ApiError
     */
    public static async types(
        parameterArray: Array<string>,
        parameterDictionary: Record<string, string>,
        parameterEnum: 'Success' | 'Warning' | 'Error',
        parameterNumber: number = 123,
        parameterString: string = 'default',
        parameterBoolean: boolean = true,
        parameterObject: any = null,
        id?: number,

    ): Promise<number | string | boolean | any> {
        return (await TypesServiceFull.types(
            parameterArray, parameterDictionary, parameterEnum, parameterNumber, parameterString, parameterBoolean, parameterObject, id,
        )).body;
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/TypesServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class TypesServiceFull {

    /**
     * @param parameterArray This is an array parameter
     * @param parameterDictionary This is a dictionary parameter
     * @param parameterEnum This is an enum parameter
     * @param parameterNumber This is a number parameter
     * @param parameterString This is a string parameter
     * @param parameterBoolean This is a boolean parameter
     * @param parameterObject This is an object parameter
     * @param id This is a number parameter

     * @returns number Response is a simple number
     * @returns string Response is a simple string
     * @returns boolean Response is a simple boolean
     * @returns any Response is a simple object
     * @throws ApiError
     */
    public static async types(
        parameterArray: Array<string>,
        parameterDictionary: Record<string, string>,
        parameterEnum: 'Success' | 'Warning' | 'Error',
        parameterNumber: number = 123,
        parameterString: string = 'default',
        parameterBoolean: boolean = true,
        parameterObject: any = null,
        id?: number,

    ): Promise<ApiResult<number | string | boolean | any>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/types\`,
            query: {
                'parameterArray': parameterArray,
                'parameterDictionary': parameterDictionary,
                'parameterEnum': parameterEnum,
                'parameterNumber': parameterNumber,
                'parameterString': parameterString,
                'parameterBoolean': parameterBoolean,
                'parameterObject': parameterObject,
            },
        });
    }

}"
`;

exports[`v2 should generate: ./test/generated/v2/services/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export { CollectionFormatService } from './CollectionFormatService';
export { CollectionFormatServiceFull } from './CollectionFormatServiceFull';
export { ComplexService } from './ComplexService';
export { ComplexServiceFull } from './ComplexServiceFull';
export { DefaultsService } from './DefaultsService';
export { DefaultsServiceFull } from './DefaultsServiceFull';
export { DuplicateService } from './DuplicateService';
export { DuplicateServiceFull } from './DuplicateServiceFull';
export { HeaderService } from './HeaderService';
export { HeaderServiceFull } from './HeaderServiceFull';
export { NoContentService } from './NoContentService';
export { NoContentServiceFull } from './NoContentServiceFull';
export { ParametersService } from './ParametersService';
export { ParametersServiceFull } from './ParametersServiceFull';
export { ResponseService } from './ResponseService';
export { ResponseServiceFull } from './ResponseServiceFull';
export { SimpleService } from './SimpleService';
export { SimpleServiceFull } from './SimpleServiceFull';
export { TypesService } from './TypesService';
export { TypesServiceFull } from './TypesServiceFull';
"
`;

exports[`v3 should generate: ./test/generated/v3/core/ApiError.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from './ApiResult';

export class ApiError extends Error {
    public readonly url: string;
    public readonly status: number;
    public readonly statusText: string;
    public readonly body: any;

    constructor(response: ApiResult, message: string) {
        super(message);

        this.url = response.url;
        this.status = response.status;
        this.statusText = response.statusText;
        this.body = response.body;
    }
}"
`;

exports[`v3 should generate: ./test/generated/v3/core/ApiRequestOptions.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export type ApiRequestOptions = {
    readonly method: 'GET' | 'PUT' | 'POST' | 'DELETE' | 'OPTIONS' | 'HEAD' | 'PATCH';
    readonly path: string;
    readonly cookies?: Record<string, any>;
    readonly headers?: Record<string, any>;
    readonly query?: Record<string, any>;
    readonly formData?: Record<string, any>;
    readonly body?: any;
    readonly mediaType?: string;
    readonly responseHeader?: string;
    readonly errors?: Record<number, string>;
}"
`;

exports[`v3 should generate: ./test/generated/v3/core/ApiResult.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export type ApiResult<T = any> = {
    readonly url: string;
    readonly ok: boolean;
    readonly status: number;
    readonly statusText: string;
    readonly body: T;
}"
`;

exports[`v3 should generate: ./test/generated/v3/core/OpenAPI.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiRequestOptions } from './ApiRequestOptions';

type Resolver<T> = (options: ApiRequestOptions) => Promise<T>;
type Headers = Record<string, string>;

export type ClientConfig = {
    baseUrl?: string;
    version?: string;
    withCredentials?: boolean;
    token?: string | Resolver<string>;
    username?: string | Resolver<string>;
    password?: string | Resolver<string>;
    headers?: Headers | Resolver<Headers>;
}
export const OpenAPI: ClientConfig = {
    baseUrl: 'http://localhost:3000/base',
    version: '1.0',
    withCredentials: false,
    token: undefined,
    username: undefined,
    password: undefined,
    headers: undefined,
};
"
`;

exports[`v3 should generate: ./test/generated/v3/core/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export { ApiError } from './ApiError';
export type { ApiRequestOptions } from './ApiRequestOptions';
export type { ApiResult } from './ApiResult';
export { OpenAPI } from './OpenAPI';
export { request } from './request';
"
`;

exports[`v3 should generate: ./test/generated/v3/core/request.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { ApiError } from './ApiError';
import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';
import type { ClientConfig } from './OpenAPI';
import { OpenAPI } from './OpenAPI';

function isDefined<T>(value: T | null | undefined): value is Exclude<T, null | undefined> {
    return value !== undefined && value !== null;
}

function isString(value: any): value is string {
    return typeof value === 'string';
}

export function deepAssign(
    target: Record<string, unknown>,
    source: Record<string, unknown>,
): Record<string, unknown> {
    const keys = Object.keys(source);
    for (const k of keys) {
        const sourceValue: unknown = source[k];
        const targetValue: unknown = target[k];
        if (Object(sourceValue) === sourceValue && Object(targetValue) === targetValue) {
            target[k] = deepAssign(
                targetValue as Record<string, unknown>,
                sourceValue as Record<string, unknown>,
            );
        } else {
            target[k] = source[k];
        }
    }
    return target;
}

function isStringWithValue(value: any): value is string {
    return isString(value) && value !== '';
}

function isBlob(value: any): value is Blob {
    return value instanceof Blob;
}

function getQueryString(params: Record<string, any>): string {
    const qs: string[] = [];
    Object.keys(params).forEach(key => {
        const value = params[key];
        if (isDefined(value)) {
            if (Array.isArray(value)) {
                value.forEach(value => {
                    qs.push(\`\${encodeURIComponent(key)}=\${encodeURIComponent(String(value))}\`);
                });
            } else {
                qs.push(\`\${encodeURIComponent(key)}=\${encodeURIComponent(String(value))}\`);
            }
        }
    });
    if (qs.length > 0) {
        return \`?\${qs.join('&')}\`;
    }
    return '';
}

function getUrl(options: ApiRequestOptions, config: ClientConfig): string {
    const path = options.path.replace(/[:]/g, '_');
    const url = \`\${config.baseUrl}\${path}\`;

    if (options.query) {
        return \`\${url}\${getQueryString(options.query)}\`;
    }
    return url;
}

function getFormData(params: Record<string, any>): FormData {
    const formData = new FormData();
    Object.keys(params).forEach(key => {
        const value = params[key];
        if (isDefined(value)) {
            formData.append(key, value);
        }
    });
    return formData;
}

type Resolver<T> = (options: ApiRequestOptions) => Promise<T>;

async function resolve<T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> {
    if (typeof resolver === 'function') {
        return (resolver as Resolver<T>)(options);
    }
    return resolver;
}

async function getHeaders(options: ApiRequestOptions, config: ClientConfig): Promise<Headers> {
    const token = await resolve(options, config.token);
    const username = await resolve(options, config.username);
    const password = await resolve(options, config.password);
    const defaultHeaders = await resolve(options, config.headers);

    const headers = new Headers({
        Accept: 'application/json',
        ...defaultHeaders,
        ...options.headers,
    });

    if (isStringWithValue(token)) {
        headers.append('Authorization', \`Bearer \${token}\`);
    }

    if (isStringWithValue(username) && isStringWithValue(password)) {
        const credentials = btoa(\`\${username}:\${password}\`);
        headers.append('Authorization', \`Basic \${credentials}\`);
    }

    if (options.body) {
        if (options.mediaType) {
            headers.append('Content-Type', options.mediaType);
        } else if (isBlob(options.body)) {
            headers.append('Content-Type', options.body.type || 'application/octet-stream');
        } else if (isString(options.body)) {
            headers.append('Content-Type', 'text/plain');
        } else {
            headers.append('Content-Type', 'application/json');
        }
    }
    return headers;
}

function getRequestBody(options: ApiRequestOptions): BodyInit | undefined {
    if (options.formData) {
        return getFormData(options.formData);
    }
    if (options.body) {
        if (options.mediaType?.includes('/json')) {
            return JSON.stringify(options.body)
        } else if (isString(options.body) || isBlob(options.body)) {
            return options.body;
        } else {
            return JSON.stringify(options.body);
        }
    }
    return undefined;
}

async function sendRequest(options: ApiRequestOptions, config: ClientConfig, url: string): Promise<Response> {
    const request: RequestInit = {
        method: options.method,
        headers: await getHeaders(options, config),
        body: getRequestBody(options),
    };
    if (config.withCredentials) {
        request.credentials = 'include';
    }
    return await fetch(url, request);
}

function getResponseHeader(response: Response, responseHeader?: string): string | null {
    if (responseHeader) {
        const content = response.headers.get(responseHeader);
        if (isString(content)) {
            return content;
        }
    }
    return null;
}

async function getResponseBody(response: Response): Promise<any> {
    try {
        const contentType = response.headers.get('Content-Type');
        if (contentType) {
            const isJSON = contentType.toLowerCase().startsWith('application/json');
            if (isJSON) {
                return await response.json();
            } else {
                return await response.text();
            }
        }
    } catch (error) {
        console.error(error);
    }
    return null;
}

function catchErrors(options: ApiRequestOptions, result: ApiResult): void {
    const errors: Record<number, string> = {
        400: 'Bad Request',
        401: 'Unauthorized',
        403: 'Forbidden',
        404: 'Not Found',
        500: 'Internal Server Error',
        502: 'Bad Gateway',
        503: 'Service Unavailable',
        ...options.errors,
    }

    const error = errors[result.status];
    if (error) {
        throw new ApiError(result, error);
    }

    if (!result.ok) {
        throw new ApiError(result, 'Generic Error');
    }
}

/**
 * Request using fetch client
 * @param options The request options from the the service
 * @returns ApiResult
 * @throws ApiError
 */
export async function request(options: ApiRequestOptions): Promise<ApiResult> {
    const url = getUrl(options, OpenAPI);
    const response = await sendRequest(options, OpenAPI, url);
    const responseBody = await getResponseBody(response);
    const responseHeader = getResponseHeader(response, options.responseHeader);

    const result: ApiResult = {
        url,
        ok: response.ok,
        status: response.status,
        statusText: response.statusText,
        body: responseHeader || responseBody,
    };

    catchErrors(options, result);
    return result;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export * from './core';
export * from './models';
export * from './schemas';
export * from './services';

"
`;

exports[`v3 should generate: ./test/generated/v3/models/ArrayWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a simple array containing an array
 */
export type ArrayWithArray = Array<Array<ModelWithString>>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/ArrayWithBooleans.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with booleans
 */
export type ArrayWithBooleans = Array<boolean>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/ArrayWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with numbers
 */
export type ArrayWithNumbers = Array<number>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/ArrayWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with properties
 */
export type ArrayWithProperties = Array<{
    foo?: string,
    bar?: string,
}>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/ArrayWithReferences.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a simple array with references
 */
export type ArrayWithReferences = Array<ModelWithString>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/ArrayWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple array with strings
 */
export type ArrayWithStrings = Array<string>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/CompositionWithAllOfAndNullable.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithArray } from './ModelWithArray';
import type { ModelWithDictionary } from './ModelWithDictionary';
import type { ModelWithEnum } from './ModelWithEnum';

/**
 * This is a model with one property with a 'all of' relationship
 */
export type CompositionWithAllOfAndNullable = {
    propA?: ({
        boolean?: boolean,
    } & ModelWithEnum & ModelWithArray & ModelWithDictionary) | null;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/CompositionWithAnyOf.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithArray } from './ModelWithArray';
import type { ModelWithDictionary } from './ModelWithDictionary';
import type { ModelWithEnum } from './ModelWithEnum';
import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with one property with a 'any of' relationship
 */
export type CompositionWithAnyOf = {
    propA?: (ModelWithString | ModelWithEnum | ModelWithArray | ModelWithDictionary);
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/CompositionWithAnyOfAndNullable.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithArray } from './ModelWithArray';
import type { ModelWithDictionary } from './ModelWithDictionary';
import type { ModelWithEnum } from './ModelWithEnum';

/**
 * This is a model with one property with a 'any of' relationship
 */
export type CompositionWithAnyOfAndNullable = {
    propA?: ({
        boolean?: boolean,
    } | ModelWithEnum | ModelWithArray | ModelWithDictionary) | null;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/CompositionWithAnyOfAnonymous.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one property with a 'any of' relationship where the options are not $ref
 */
export type CompositionWithAnyOfAnonymous = {
    propA?: ({
        propA?: any,
    } | string | number);
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/CompositionWithOneOf.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithArray } from './ModelWithArray';
import type { ModelWithDictionary } from './ModelWithDictionary';
import type { ModelWithEnum } from './ModelWithEnum';
import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with one property with a 'one of' relationship
 */
export type CompositionWithOneOf = {
    propA?: (ModelWithString | ModelWithEnum | ModelWithArray | ModelWithDictionary);
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/CompositionWithOneOfAndNullable.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithArray } from './ModelWithArray';
import type { ModelWithDictionary } from './ModelWithDictionary';
import type { ModelWithEnum } from './ModelWithEnum';

/**
 * This is a model with one property with a 'one of' relationship
 */
export type CompositionWithOneOfAndNullable = {
    propA?: ({
        boolean?: boolean,
    } | ModelWithEnum | ModelWithArray | ModelWithDictionary) | null;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/CompositionWithOneOfAnonymous.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one property with a 'one of' relationship where the options are not $ref
 */
export type CompositionWithOneOfAnonymous = {
    propA?: ({
        propA?: any,
    } | string | number);
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/DictionaryWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a complex dictionary
 */
export type DictionaryWithArray = Record<string, Array<ModelWithString>>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/DictionaryWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a string dictionary
 */
export type DictionaryWithDictionary = Record<string, Record<string, string>>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/DictionaryWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a complex dictionary
 */
export type DictionaryWithProperties = Record<string, {
    foo?: string,
    bar?: string,
}>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/DictionaryWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a string reference
 */
export type DictionaryWithReference = Record<string, ModelWithString>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/DictionaryWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a string dictionary
 */
export type DictionaryWithString = Record<string, string>;"
`;

exports[`v3 should generate: ./test/generated/v3/models/EnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * Success=1,Warning=2,Error=3
 */
export enum EnumFromDescription {
    SUCCESS = 1,
    WARNING = 2,
    ERROR = 3,
}"
`;

exports[`v3 should generate: ./test/generated/v3/models/EnumWithExtensions.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple enum with numbers
 */
export enum EnumWithExtensions {
    /**
     * Used when the status of something is successful
     */
    CUSTOM_SUCCESS = 200,
    /**
     * Used when the status of something has a warning
     */
    CUSTOM_WARNING = 400,
    /**
     * Used when the status of something has an error
     */
    CUSTOM_ERROR = 500,
}"
`;

exports[`v3 should generate: ./test/generated/v3/models/EnumWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple enum with numbers
 */
export enum EnumWithNumbers {
    '_1' = 1,
    '_2' = 2,
    '_3' = 3,
    '_1.1' = 1.1,
    '_1.2' = 1.2,
    '_1.3' = 1.3,
    '_100' = 100,
    '_200' = 200,
    '_300' = 300,
    '_-100' = -100,
    '_-200' = -200,
    '_-300' = -300,
    '_-1.1' = -1.1,
    '_-1.2' = -1.2,
    '_-1.3' = -1.3,
}"
`;

exports[`v3 should generate: ./test/generated/v3/models/EnumWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple enum with strings
 */
export enum EnumWithStrings {
    SUCCESS = 'Success',
    WARNING = 'Warning',
    ERROR = 'Error',
}"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelThatExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model that extends another model
 */
export type ModelThatExtends = (ModelWithString & {
    propExtendsA?: string,
    propExtendsB?: ModelWithString,
});
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelThatExtendsExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelThatExtends } from './ModelThatExtends';
import type { ModelWithString } from './ModelWithString';

/**
 * This is a model that extends another model
 */
export type ModelThatExtendsExtends = (ModelWithString & ModelThatExtends & {
    propExtendsC?: string,
    propExtendsD?: ModelWithString,
});
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with one property containing an array
 */
export type ModelWithArray = {
    prop?: Array<ModelWithString>;
    propWithFile?: Array<Blob>;
    propWithNumber?: Array<number>;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one boolean property
 */
export type ModelWithBoolean = {
    /**
     * This is a simple boolean property
     */
    prop?: boolean;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithCircularReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one property containing a circular reference
 */
export type ModelWithCircularReference = {
    prop?: ModelWithCircularReference;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one property containing a dictionary
 */
export type ModelWithDictionary = {
    prop?: Record<string, string>;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithDuplicateImports.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with duplicated imports
 */
export type ModelWithDuplicateImports = {
    propA?: ModelWithString;
    propB?: ModelWithString;
    propC?: ModelWithString;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithDuplicateProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with duplicated properties
 */
export type ModelWithDuplicateProperties = {
    prop?: ModelWithString;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithEnum.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one enum
 */
export type ModelWithEnum = {
    /**
     * This is a simple enum with strings
     */
    test?: ModelWithEnum.test;
    /**
     * These are the HTTP error code enums
     */
    statusCode?: ModelWithEnum.statusCode;
    /**
     * Simple boolean enum
     */
    bool?: boolean;
}

export namespace ModelWithEnum {

    /**
     * This is a simple enum with strings
     */
    export enum test {
        SUCCESS = 'Success',
        WARNING = 'Warning',
        ERROR = 'Error',
    }

    /**
     * These are the HTTP error code enums
     */
    export enum statusCode {
        _100 = '100',
        _200_FOO = '200 FOO',
        _300_FOO_BAR = '300 FOO_BAR',
        _400_FOO_BAR = '400 foo-bar',
        _500_FOO_BAR = '500 foo.bar',
        _600_FOO_BAR = '600 foo&bar',
    }


}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithEnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one enum
 */
export type ModelWithEnumFromDescription = {
    /**
     * Success=1,Warning=2,Error=3
     */
    test?: ModelWithEnumFromDescription.test;
}

export namespace ModelWithEnumFromDescription {

    /**
     * Success=1,Warning=2,Error=3
     */
    export enum test {
        SUCCESS = 1,
        WARNING = 2,
        ERROR = 3,
    }


}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one number property
 */
export type ModelWithInteger = {
    /**
     * This is a simple number property
     */
    prop?: number;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithNestedEnums.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with nested enums
 */
export type ModelWithNestedEnums = {
    dictionaryWithEnum?: Record<string, 'Success' | 'Warning' | 'Error'>;
    dictionaryWithEnumFromDescription?: Record<string, 1 | 2 | 3>;
    arrayWithEnum?: Array<'Success' | 'Warning' | 'Error'>;
    arrayWithDescription?: Array<1 | 2 | 3>;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithNestedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one nested property
 */
export type ModelWithNestedProperties = {
    readonly first: {
        readonly second: {
            readonly third: string | null,
        } | null,
    } | null;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithOrderedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with ordered properties
 */
export type ModelWithOrderedProperties = {
    zebra?: string;
    apple?: string;
    hawaii?: string;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model that contains a some patterns
 */
export type ModelWithPattern = {
    key: string;
    name: string;
    readonly enabled?: boolean;
    readonly modified?: string;
    id?: string;
    text?: string;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a model with one nested property
 */
export type ModelWithProperties = {
    required: string;
    readonly requiredAndReadOnly: string;
    requiredAndNullable: string | null;
    string?: string;
    number?: number;
    boolean?: boolean;
    reference?: ModelWithString;
    'property with space'?: string;
    default?: string;
    try?: string;
    readonly '@namespace.string'?: string;
    readonly '@namespace.integer'?: number;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithProperties } from './ModelWithProperties';

/**
 * This is a model with one property containing a reference
 */
export type ModelWithReference = {
    prop?: ModelWithProperties;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a model with one string property
 */
export type ModelWithString = {
    /**
     * This is a simple string property
     */
    prop?: string;
}
"
`;

exports[`v3 should generate: ./test/generated/v3/models/MultilineComment.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * Testing multiline comments.
 * This must go to the next line.
 *
 * This will contain a break.
 */
export type MultilineComment = number;"
`;

exports[`v3 should generate: ./test/generated/v3/models/SimpleBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple boolean
 */
export type SimpleBoolean = boolean;"
`;

exports[`v3 should generate: ./test/generated/v3/models/SimpleFile.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple file
 */
export type SimpleFile = Blob;"
`;

exports[`v3 should generate: ./test/generated/v3/models/SimpleInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple number
 */
export type SimpleInteger = number;"
`;

exports[`v3 should generate: ./test/generated/v3/models/SimpleReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { ModelWithString } from './ModelWithString';

/**
 * This is a simple reference
 */
export type SimpleReference = ModelWithString;"
`;

exports[`v3 should generate: ./test/generated/v3/models/SimpleString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple string
 */
export type SimpleString = string;"
`;

exports[`v3 should generate: ./test/generated/v3/models/SimpleStringWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * This is a simple string
 */
export type SimpleStringWithPattern = string | null;"
`;

exports[`v3 should generate: ./test/generated/v3/models/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export type { ArrayWithArray } from './ArrayWithArray';
export type { ArrayWithBooleans } from './ArrayWithBooleans';
export type { ArrayWithNumbers } from './ArrayWithNumbers';
export type { ArrayWithProperties } from './ArrayWithProperties';
export type { ArrayWithReferences } from './ArrayWithReferences';
export type { ArrayWithStrings } from './ArrayWithStrings';
export type { CompositionWithAllOfAndNullable } from './CompositionWithAllOfAndNullable';
export type { CompositionWithAnyOf } from './CompositionWithAnyOf';
export type { CompositionWithAnyOfAndNullable } from './CompositionWithAnyOfAndNullable';
export type { CompositionWithAnyOfAnonymous } from './CompositionWithAnyOfAnonymous';
export type { CompositionWithOneOf } from './CompositionWithOneOf';
export type { CompositionWithOneOfAndNullable } from './CompositionWithOneOfAndNullable';
export type { CompositionWithOneOfAnonymous } from './CompositionWithOneOfAnonymous';
export type { DictionaryWithArray } from './DictionaryWithArray';
export type { DictionaryWithDictionary } from './DictionaryWithDictionary';
export type { DictionaryWithProperties } from './DictionaryWithProperties';
export type { DictionaryWithReference } from './DictionaryWithReference';
export type { DictionaryWithString } from './DictionaryWithString';
export { EnumFromDescription } from './EnumFromDescription';
export { EnumWithExtensions } from './EnumWithExtensions';
export { EnumWithNumbers } from './EnumWithNumbers';
export { EnumWithStrings } from './EnumWithStrings';
export type { ModelThatExtends } from './ModelThatExtends';
export type { ModelThatExtendsExtends } from './ModelThatExtendsExtends';
export type { ModelWithArray } from './ModelWithArray';
export type { ModelWithBoolean } from './ModelWithBoolean';
export type { ModelWithCircularReference } from './ModelWithCircularReference';
export type { ModelWithDictionary } from './ModelWithDictionary';
export type { ModelWithDuplicateImports } from './ModelWithDuplicateImports';
export type { ModelWithDuplicateProperties } from './ModelWithDuplicateProperties';
export type { ModelWithEnum } from './ModelWithEnum';
export type { ModelWithEnumFromDescription } from './ModelWithEnumFromDescription';
export type { ModelWithInteger } from './ModelWithInteger';
export type { ModelWithNestedEnums } from './ModelWithNestedEnums';
export type { ModelWithNestedProperties } from './ModelWithNestedProperties';
export type { ModelWithOrderedProperties } from './ModelWithOrderedProperties';
export type { ModelWithPattern } from './ModelWithPattern';
export type { ModelWithProperties } from './ModelWithProperties';
export type { ModelWithReference } from './ModelWithReference';
export type { ModelWithString } from './ModelWithString';
export type { MultilineComment } from './MultilineComment';
export type { SimpleBoolean } from './SimpleBoolean';
export type { SimpleFile } from './SimpleFile';
export type { SimpleInteger } from './SimpleInteger';
export type { SimpleReference } from './SimpleReference';
export type { SimpleString } from './SimpleString';
export type { SimpleStringWithPattern } from './SimpleStringWithPattern';
"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ArrayWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithArray = {
    type: 'array',
    contains: {
        type: 'array',
        contains: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ArrayWithBooleans.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithBooleans = {
    type: 'array',
    contains: {
        type: 'boolean',
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ArrayWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithNumbers = {
    type: 'array',
    contains: {
        type: 'number',
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ArrayWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithProperties = {
    type: 'array',
    contains: {
        properties: {
            foo: {
                type: 'string',
            },
            bar: {
                type: 'string',
            },
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ArrayWithReferences.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithReferences = {
    type: 'array',
    contains: {
        type: 'ModelWithString',
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ArrayWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ArrayWithStrings = {
    type: 'array',
    contains: {
        type: 'string',
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$CompositionWithAllOfAndNullable.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $CompositionWithAllOfAndNullable = {
    properties: {
        propA: {
            type: 'all-of',
            contains: [{
                properties: {
                    boolean: {
                        type: 'boolean',
                    },
                },
            }, {
                type: 'ModelWithEnum',
            }, {
                type: 'ModelWithArray',
            }, {
                type: 'ModelWithDictionary',
            }],
            isNullable: true,
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$CompositionWithAnyOf.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $CompositionWithAnyOf = {
    properties: {
        propA: {
            type: 'any-of',
            contains: [{
                type: 'ModelWithString',
            }, {
                type: 'ModelWithEnum',
            }, {
                type: 'ModelWithArray',
            }, {
                type: 'ModelWithDictionary',
            }],
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$CompositionWithAnyOfAndNullable.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $CompositionWithAnyOfAndNullable = {
    properties: {
        propA: {
            type: 'any-of',
            contains: [{
                properties: {
                    boolean: {
                        type: 'boolean',
                    },
                },
            }, {
                type: 'ModelWithEnum',
            }, {
                type: 'ModelWithArray',
            }, {
                type: 'ModelWithDictionary',
            }],
            isNullable: true,
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$CompositionWithAnyOfAnonymous.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $CompositionWithAnyOfAnonymous = {
    properties: {
        propA: {
            type: 'any-of',
            contains: [{
                properties: {
                    propA: {
                        properties: {
                        },
                    },
                },
            }, {
                type: 'string',
            }, {
                type: 'number',
            }],
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$CompositionWithOneOf.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $CompositionWithOneOf = {
    properties: {
        propA: {
            type: 'one-of',
            contains: [{
                type: 'ModelWithString',
            }, {
                type: 'ModelWithEnum',
            }, {
                type: 'ModelWithArray',
            }, {
                type: 'ModelWithDictionary',
            }],
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$CompositionWithOneOfAndNullable.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $CompositionWithOneOfAndNullable = {
    properties: {
        propA: {
            type: 'one-of',
            contains: [{
                properties: {
                    boolean: {
                        type: 'boolean',
                    },
                },
            }, {
                type: 'ModelWithEnum',
            }, {
                type: 'ModelWithArray',
            }, {
                type: 'ModelWithDictionary',
            }],
            isNullable: true,
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$CompositionWithOneOfAnonymous.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $CompositionWithOneOfAnonymous = {
    properties: {
        propA: {
            type: 'one-of',
            contains: [{
                properties: {
                    propA: {
                        properties: {
                        },
                    },
                },
            }, {
                type: 'string',
            }, {
                type: 'number',
            }],
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$DictionaryWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithArray = {
    type: 'dictionary',
    contains: {
        type: 'array',
        contains: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$DictionaryWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithDictionary = {
    type: 'dictionary',
    contains: {
        type: 'dictionary',
        contains: {
            type: 'string',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$DictionaryWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithProperties = {
    type: 'dictionary',
    contains: {
        properties: {
            foo: {
                type: 'string',
            },
            bar: {
                type: 'string',
            },
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$DictionaryWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithReference = {
    type: 'dictionary',
    contains: {
        type: 'ModelWithString',
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$DictionaryWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $DictionaryWithString = {
    type: 'dictionary',
    contains: {
        type: 'string',
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$EnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumFromDescription = {
    type: 'Enum',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$EnumWithExtensions.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumWithExtensions = {
    type: 'Enum',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$EnumWithNumbers.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumWithNumbers = {
    type: 'Enum',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$EnumWithStrings.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $EnumWithStrings = {
    type: 'Enum',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelThatExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelThatExtends = {
    type: 'all-of',
    contains: [{
        type: 'ModelWithString',
    }, {
        properties: {
            propExtendsA: {
                type: 'string',
            },
            propExtendsB: {
                type: 'ModelWithString',
            },
        },
    }],
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelThatExtendsExtends.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelThatExtendsExtends = {
    type: 'all-of',
    contains: [{
        type: 'ModelWithString',
    }, {
        type: 'ModelThatExtends',
    }, {
        properties: {
            propExtendsC: {
                type: 'string',
            },
            propExtendsD: {
                type: 'ModelWithString',
            },
        },
    }],
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithArray.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithArray = {
    properties: {
        prop: {
            type: 'array',
            contains: {
                type: 'ModelWithString',
            },
        },
        propWithFile: {
            type: 'array',
            contains: {
                type: 'File',
            },
        },
        propWithNumber: {
            type: 'array',
            contains: {
                type: 'number',
            },
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithBoolean = {
    properties: {
        prop: {
            type: 'boolean',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithCircularReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithCircularReference = {
    properties: {
        prop: {
            type: 'ModelWithCircularReference',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithDictionary.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithDictionary = {
    properties: {
        prop: {
            type: 'dictionary',
            contains: {
                type: 'string',
            },
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithDuplicateImports.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithDuplicateImports = {
    properties: {
        propA: {
            type: 'ModelWithString',
        },
        propB: {
            type: 'ModelWithString',
        },
        propC: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithDuplicateProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithDuplicateProperties = {
    properties: {
        prop: {
            type: 'ModelWithString',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithEnum.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithEnum = {
    properties: {
        test: {
            type: 'Enum',
        },
        statusCode: {
            type: 'Enum',
        },
        bool: {
            type: 'boolean',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithEnumFromDescription.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithEnumFromDescription = {
    properties: {
        test: {
            type: 'Enum',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithInteger = {
    properties: {
        prop: {
            type: 'number',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithNestedEnums.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithNestedEnums = {
    properties: {
        dictionaryWithEnum: {
            type: 'dictionary',
            contains: {
                type: 'Enum',
            },
        },
        dictionaryWithEnumFromDescription: {
            type: 'dictionary',
            contains: {
                type: 'Enum',
            },
        },
        arrayWithEnum: {
            type: 'array',
            contains: {
                type: 'Enum',
            },
        },
        arrayWithDescription: {
            type: 'array',
            contains: {
                type: 'Enum',
            },
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithNestedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithNestedProperties = {
    properties: {
        first: {
            properties: {
                second: {
                    properties: {
                        third: {
                            type: 'string',
                            isReadOnly: true,
                            isRequired: true,
                            isNullable: true,
                        },
                    },
                    isReadOnly: true,
                    isRequired: true,
                    isNullable: true,
                },
            },
            isReadOnly: true,
            isRequired: true,
            isNullable: true,
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithOrderedProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithOrderedProperties = {
    properties: {
        zebra: {
            type: 'string',
        },
        apple: {
            type: 'string',
        },
        hawaii: {
            type: 'string',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithPattern = {
    properties: {
        key: {
            type: 'string',
            isRequired: true,
            maxLength: 64,
            pattern: '^[a-zA-Z0-9_]*$',
        },
        name: {
            type: 'string',
            isRequired: true,
            maxLength: 255,
        },
        enabled: {
            type: 'boolean',
            isReadOnly: true,
        },
        modified: {
            type: 'string',
            isReadOnly: true,
            format: 'date-time',
        },
        id: {
            type: 'string',
            pattern: '^\\\\\\\\d{2}-\\\\\\\\d{3}-\\\\\\\\d{4}$',
        },
        text: {
            type: 'string',
            pattern: '^\\\\\\\\w+$',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithProperties.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithProperties = {
    properties: {
        required: {
            type: 'string',
            isRequired: true,
        },
        requiredAndReadOnly: {
            type: 'string',
            isReadOnly: true,
            isRequired: true,
        },
        requiredAndNullable: {
            type: 'string',
            isRequired: true,
            isNullable: true,
        },
        string: {
            type: 'string',
        },
        number: {
            type: 'number',
        },
        boolean: {
            type: 'boolean',
        },
        reference: {
            type: 'ModelWithString',
        },
        'property with space': {
            type: 'string',
        },
        default: {
            type: 'string',
        },
        try: {
            type: 'string',
        },
        '@namespace.string': {
            type: 'string',
            isReadOnly: true,
        },
        '@namespace.integer': {
            type: 'number',
            isReadOnly: true,
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithReference = {
    properties: {
        prop: {
            type: 'ModelWithProperties',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$ModelWithString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $ModelWithString = {
    properties: {
        prop: {
            type: 'string',
        },
    },
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$MultilineComment.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $MultilineComment = {
    type: 'number',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$SimpleBoolean.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleBoolean = {
    type: 'boolean',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$SimpleFile.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleFile = {
    type: 'File',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$SimpleInteger.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleInteger = {
    type: 'number',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$SimpleReference.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleReference = {
    type: 'ModelWithString',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$SimpleString.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleString = {
    type: 'string',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/$SimpleStringWithPattern.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export const $SimpleStringWithPattern = {
    type: 'string',
    isNullable: true,
    maxLength: 64,
    pattern: '^[a-zA-Z0-9_]*$',
};"
`;

exports[`v3 should generate: ./test/generated/v3/schemas/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export { $ArrayWithArray } from './$ArrayWithArray';
export { $ArrayWithBooleans } from './$ArrayWithBooleans';
export { $ArrayWithNumbers } from './$ArrayWithNumbers';
export { $ArrayWithProperties } from './$ArrayWithProperties';
export { $ArrayWithReferences } from './$ArrayWithReferences';
export { $ArrayWithStrings } from './$ArrayWithStrings';
export { $CompositionWithAllOfAndNullable } from './$CompositionWithAllOfAndNullable';
export { $CompositionWithAnyOf } from './$CompositionWithAnyOf';
export { $CompositionWithAnyOfAndNullable } from './$CompositionWithAnyOfAndNullable';
export { $CompositionWithAnyOfAnonymous } from './$CompositionWithAnyOfAnonymous';
export { $CompositionWithOneOf } from './$CompositionWithOneOf';
export { $CompositionWithOneOfAndNullable } from './$CompositionWithOneOfAndNullable';
export { $CompositionWithOneOfAnonymous } from './$CompositionWithOneOfAnonymous';
export { $DictionaryWithArray } from './$DictionaryWithArray';
export { $DictionaryWithDictionary } from './$DictionaryWithDictionary';
export { $DictionaryWithProperties } from './$DictionaryWithProperties';
export { $DictionaryWithReference } from './$DictionaryWithReference';
export { $DictionaryWithString } from './$DictionaryWithString';
export { $EnumFromDescription } from './$EnumFromDescription';
export { $EnumWithExtensions } from './$EnumWithExtensions';
export { $EnumWithNumbers } from './$EnumWithNumbers';
export { $EnumWithStrings } from './$EnumWithStrings';
export { $ModelThatExtends } from './$ModelThatExtends';
export { $ModelThatExtendsExtends } from './$ModelThatExtendsExtends';
export { $ModelWithArray } from './$ModelWithArray';
export { $ModelWithBoolean } from './$ModelWithBoolean';
export { $ModelWithCircularReference } from './$ModelWithCircularReference';
export { $ModelWithDictionary } from './$ModelWithDictionary';
export { $ModelWithDuplicateImports } from './$ModelWithDuplicateImports';
export { $ModelWithDuplicateProperties } from './$ModelWithDuplicateProperties';
export { $ModelWithEnum } from './$ModelWithEnum';
export { $ModelWithEnumFromDescription } from './$ModelWithEnumFromDescription';
export { $ModelWithInteger } from './$ModelWithInteger';
export { $ModelWithNestedEnums } from './$ModelWithNestedEnums';
export { $ModelWithNestedProperties } from './$ModelWithNestedProperties';
export { $ModelWithOrderedProperties } from './$ModelWithOrderedProperties';
export { $ModelWithPattern } from './$ModelWithPattern';
export { $ModelWithProperties } from './$ModelWithProperties';
export { $ModelWithReference } from './$ModelWithReference';
export { $ModelWithString } from './$ModelWithString';
export { $MultilineComment } from './$MultilineComment';
export { $SimpleBoolean } from './$SimpleBoolean';
export { $SimpleFile } from './$SimpleFile';
export { $SimpleInteger } from './$SimpleInteger';
export { $SimpleReference } from './$SimpleReference';
export { $SimpleString } from './$SimpleString';
export { $SimpleStringWithPattern } from './$SimpleStringWithPattern';
"
`;

exports[`v3 should generate: ./test/generated/v3/services/CollectionFormatService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { CollectionFormatServiceFull } from './CollectionFormatServiceFull';

export class CollectionFormatService {

    /**
     * @param parameterArrayCsv This is an array parameter that is send as csv format (comma-separated values)
     * @param parameterArraySsv This is an array parameter that is send as ssv format (space-separated values)
     * @param parameterArrayTsv This is an array parameter that is send as tsv format (tab-separated values)
     * @param parameterArrayPipes This is an array parameter that is send as pipes format (pipe-separated values)
     * @param parameterArrayMulti This is an array parameter that is send as multi format (multiple parameter instances)

     * @throws ApiError
     */
    public static async collectionFormat(
        parameterArrayCsv: Array<string> | null,
        parameterArraySsv: Array<string> | null,
        parameterArrayTsv: Array<string> | null,
        parameterArrayPipes: Array<string> | null,
        parameterArrayMulti: Array<string> | null,

    ): Promise<void> {
        return (await CollectionFormatServiceFull.collectionFormat(
            parameterArrayCsv, parameterArraySsv, parameterArrayTsv, parameterArrayPipes, parameterArrayMulti,
        )).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/CollectionFormatServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class CollectionFormatServiceFull {

    /**
     * @param parameterArrayCsv This is an array parameter that is send as csv format (comma-separated values)
     * @param parameterArraySsv This is an array parameter that is send as ssv format (space-separated values)
     * @param parameterArrayTsv This is an array parameter that is send as tsv format (tab-separated values)
     * @param parameterArrayPipes This is an array parameter that is send as pipes format (pipe-separated values)
     * @param parameterArrayMulti This is an array parameter that is send as multi format (multiple parameter instances)

     * @throws ApiError
     */
    public static async collectionFormat(
        parameterArrayCsv: Array<string> | null,
        parameterArraySsv: Array<string> | null,
        parameterArrayTsv: Array<string> | null,
        parameterArrayPipes: Array<string> | null,
        parameterArrayMulti: Array<string> | null,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/collectionFormat\`,
            query: {
                'parameterArrayCSV': parameterArrayCsv,
                'parameterArraySSV': parameterArraySsv,
                'parameterArrayTSV': parameterArrayTsv,
                'parameterArrayPipes': parameterArrayPipes,
                'parameterArrayMulti': parameterArrayMulti,
            },
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/ComplexService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithArray,
    ModelWithDictionary,
    ModelWithEnum,
    ModelWithString,
} from '../models';
import { ComplexServiceFull } from './ComplexServiceFull';

export class ComplexService {

    /**
     * @param parameterObject Parameter containing object
     * @param parameterReference Parameter containing reference

     * @returns ModelWithString Successful response
     * @throws ApiError
     */
    public static async complexTypes(
        parameterObject: {
            first?: {
                second?: {
                    third?: string,
                },
            },
        },
        parameterReference: ModelWithString,

    ): Promise<Array<ModelWithString>> {
        return (await ComplexServiceFull.complexTypes(
            parameterObject, parameterReference,
        )).body;
    }

    /**
     * @param id
     * @param requestBody

     * @returns ModelWithString Success
     * @throws ApiError
     */
    public static async complexParams(
        id: number,
        requestBody?: {
            readonly key: string | null,
            name: string | null,
            enabled: boolean,
            readonly type: 'Monkey' | 'Horse' | 'Bird',
            listOfModels?: Array<ModelWithString> | null,
            listOfStrings?: Array<string> | null,
            parameters: (ModelWithString | ModelWithEnum | ModelWithArray | ModelWithDictionary),
            readonly user?: {
                readonly id?: number,
                readonly name?: string | null,
            },
        },

    ): Promise<ModelWithString> {
        return (await ComplexServiceFull.complexParams(
            id, requestBody,
        )).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/ComplexServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithArray,
    ModelWithDictionary,
    ModelWithEnum,
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class ComplexServiceFull {

    /**
     * @param parameterObject Parameter containing object
     * @param parameterReference Parameter containing reference

     * @returns ModelWithString Successful response
     * @throws ApiError
     */
    public static async complexTypes(
        parameterObject: {
            first?: {
                second?: {
                    third?: string,
                },
            },
        },
        parameterReference: ModelWithString,

    ): Promise<ApiResult<Array<ModelWithString>>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/complex\`,
            query: {
                'parameterObject': parameterObject,
                'parameterReference': parameterReference,
            },
            errors: {
                400: \`400 server error\`,
                500: \`500 server error\`,
            },
        });
    }

    /**
     * @param id
     * @param requestBody

     * @returns ModelWithString Success
     * @throws ApiError
     */
    public static async complexParams(
        id: number,
        requestBody?: {
            readonly key: string | null,
            name: string | null,
            enabled: boolean,
            readonly type: 'Monkey' | 'Horse' | 'Bird',
            listOfModels?: Array<ModelWithString> | null,
            listOfStrings?: Array<string> | null,
            parameters: (ModelWithString | ModelWithEnum | ModelWithArray | ModelWithDictionary),
            readonly user?: {
                readonly id?: number,
                readonly name?: string | null,
            },
        },

    ): Promise<ApiResult<ModelWithString>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/complex/\${id}\`,
            body: requestBody,
            mediaType: 'application/json-patch+json',
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/DefaultsService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import { DefaultsServiceFull } from './DefaultsServiceFull';

export class DefaultsService {

    /**
     * @param parameterString This is a simple string with default value
     * @param parameterNumber This is a simple number with default value
     * @param parameterBoolean This is a simple boolean with default value
     * @param parameterEnum This is a simple enum with default value
     * @param parameterModel This is a simple model with default value

     * @throws ApiError
     */
    public static async callWithDefaultParameters(
        parameterString: string | null = 'Hello World!',
        parameterNumber: number | null = 123,
        parameterBoolean: boolean | null = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString | null = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<void> {
        return (await DefaultsServiceFull.callWithDefaultParameters(
            parameterString, parameterNumber, parameterBoolean, parameterEnum, parameterModel,
        )).body;
    }

    /**
     * @param parameterString This is a simple string that is optional with default value
     * @param parameterNumber This is a simple number that is optional with default value
     * @param parameterBoolean This is a simple boolean that is optional with default value
     * @param parameterEnum This is a simple enum that is optional with default value
     * @param parameterModel This is a simple model that is optional with default value

     * @throws ApiError
     */
    public static async callWithDefaultOptionalParameters(
        parameterString: string = 'Hello World!',
        parameterNumber: number = 123,
        parameterBoolean: boolean = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<void> {
        return (await DefaultsServiceFull.callWithDefaultOptionalParameters(
            parameterString, parameterNumber, parameterBoolean, parameterEnum, parameterModel,
        )).body;
    }

    /**
     * @param parameterStringWithNoDefault This is a string with no default
     * @param parameterOptionalStringWithDefault This is a optional string with default
     * @param parameterOptionalStringWithEmptyDefault This is a optional string with empty default
     * @param parameterOptionalStringWithNoDefault This is a optional string with no default
     * @param parameterStringWithDefault This is a string with default
     * @param parameterStringWithEmptyDefault This is a string with empty default

     * @throws ApiError
     */
    public static async callToTestOrderOfParams(
        parameterStringWithNoDefault: string,
        parameterOptionalStringWithDefault: string = 'Hello World!',
        parameterOptionalStringWithEmptyDefault: string = '',
        parameterOptionalStringWithNoDefault?: string,
        parameterStringWithDefault: string = 'Hello World!',
        parameterStringWithEmptyDefault: string = '',

    ): Promise<void> {
        return (await DefaultsServiceFull.callToTestOrderOfParams(
            parameterStringWithNoDefault, parameterOptionalStringWithDefault, parameterOptionalStringWithEmptyDefault, parameterOptionalStringWithNoDefault, parameterStringWithDefault, parameterStringWithEmptyDefault,
        )).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/DefaultsServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class DefaultsServiceFull {

    /**
     * @param parameterString This is a simple string with default value
     * @param parameterNumber This is a simple number with default value
     * @param parameterBoolean This is a simple boolean with default value
     * @param parameterEnum This is a simple enum with default value
     * @param parameterModel This is a simple model with default value

     * @throws ApiError
     */
    public static async callWithDefaultParameters(
        parameterString: string | null = 'Hello World!',
        parameterNumber: number | null = 123,
        parameterBoolean: boolean | null = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString | null = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/defaults\`,
            query: {
                'parameterString': parameterString,
                'parameterNumber': parameterNumber,
                'parameterBoolean': parameterBoolean,
                'parameterEnum': parameterEnum,
                'parameterModel': parameterModel,
            },
        });
    }

    /**
     * @param parameterString This is a simple string that is optional with default value
     * @param parameterNumber This is a simple number that is optional with default value
     * @param parameterBoolean This is a simple boolean that is optional with default value
     * @param parameterEnum This is a simple enum that is optional with default value
     * @param parameterModel This is a simple model that is optional with default value

     * @throws ApiError
     */
    public static async callWithDefaultOptionalParameters(
        parameterString: string = 'Hello World!',
        parameterNumber: number = 123,
        parameterBoolean: boolean = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: ModelWithString = {
            \\"prop\\": \\"Hello World!\\"
        },

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/defaults\`,
            query: {
                'parameterString': parameterString,
                'parameterNumber': parameterNumber,
                'parameterBoolean': parameterBoolean,
                'parameterEnum': parameterEnum,
                'parameterModel': parameterModel,
            },
        });
    }

    /**
     * @param parameterStringWithNoDefault This is a string with no default
     * @param parameterOptionalStringWithDefault This is a optional string with default
     * @param parameterOptionalStringWithEmptyDefault This is a optional string with empty default
     * @param parameterOptionalStringWithNoDefault This is a optional string with no default
     * @param parameterStringWithDefault This is a string with default
     * @param parameterStringWithEmptyDefault This is a string with empty default

     * @throws ApiError
     */
    public static async callToTestOrderOfParams(
        parameterStringWithNoDefault: string,
        parameterOptionalStringWithDefault: string = 'Hello World!',
        parameterOptionalStringWithEmptyDefault: string = '',
        parameterOptionalStringWithNoDefault?: string,
        parameterStringWithDefault: string = 'Hello World!',
        parameterStringWithEmptyDefault: string = '',

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/defaults\`,
            query: {
                'parameterStringWithNoDefault': parameterStringWithNoDefault,
                'parameterOptionalStringWithDefault': parameterOptionalStringWithDefault,
                'parameterOptionalStringWithEmptyDefault': parameterOptionalStringWithEmptyDefault,
                'parameterOptionalStringWithNoDefault': parameterOptionalStringWithNoDefault,
                'parameterStringWithDefault': parameterStringWithDefault,
                'parameterStringWithEmptyDefault': parameterStringWithEmptyDefault,
            },
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/DuplicateService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { DuplicateServiceFull } from './DuplicateServiceFull';

export class DuplicateService {

    /**

     * @throws ApiError
     */
    public static async duplicateName(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName()).body;
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName1(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName1()).body;
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName2(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName2()).body;
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName3(): Promise<void> {
        return (await DuplicateServiceFull.duplicateName3()).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/DuplicateServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class DuplicateServiceFull {

    /**

     * @throws ApiError
     */
    public static async duplicateName(): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName1(): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName2(): Promise<ApiResult<void>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async duplicateName3(): Promise<ApiResult<void>> {
        return __request({
            method: 'DELETE',
            path: \`/api/v\${OpenAPI.version}/duplicate\`,
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/HeaderService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { HeaderServiceFull } from './HeaderServiceFull';

export class HeaderService {

    /**

     * @returns string Successful response
     * @throws ApiError
     */
    public static async callWithResultFromHeader(): Promise<string> {
        return (await HeaderServiceFull.callWithResultFromHeader()).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/HeaderServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class HeaderServiceFull {

    /**

     * @returns string Successful response
     * @throws ApiError
     */
    public static async callWithResultFromHeader(): Promise<ApiResult<string>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/header\`,
            responseHeader: 'operation-location',
            errors: {
                400: \`400 server error\`,
                500: \`500 server error\`,
            },
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/MultipartService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { MultipartServiceFull } from './MultipartServiceFull';

export class MultipartService {

    /**

     * @returns any OK
     * @throws ApiError
     */
    public static async multipartResponse(): Promise<{
        file?: string,
        metadata?: {
            foo?: string,
            bar?: string,
        },
    }> {
        return (await MultipartServiceFull.multipartResponse()).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/MultipartServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class MultipartServiceFull {

    /**

     * @returns any OK
     * @throws ApiError
     */
    public static async multipartResponse(): Promise<ApiResult<{
        file?: string,
        metadata?: {
            foo?: string,
            bar?: string,
        },
    }>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/multipart\`,
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/NoContentService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { NoContentServiceFull } from './NoContentServiceFull';

export class NoContentService {

    /**

     * @returns void
     * @throws ApiError
     */
    public static async callWithNoContentResponse(): Promise<void> {
        return (await NoContentServiceFull.callWithNoContentResponse()).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/NoContentServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class NoContentServiceFull {

    /**

     * @returns void
     * @throws ApiError
     */
    public static async callWithNoContentResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/no-content\`,
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/ParametersService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import { ParametersServiceFull } from './ParametersServiceFull';

export class ParametersService {

    /**
     * @param parameterHeader This is the parameter that goes into the header
     * @param parameterQuery This is the parameter that goes into the query params
     * @param parameterForm This is the parameter that goes into the form data
     * @param parameterCookie This is the parameter that goes into the cookie
     * @param parameterPath This is the parameter that goes into the path
     * @param requestBody This is the parameter that goes into the body

     * @throws ApiError
     */
    public static async callWithParameters(
        parameterHeader: string | null,
        parameterQuery: string | null,
        parameterForm: string | null,
        parameterCookie: string | null,
        parameterPath: string | null,
        requestBody: ModelWithString | null,

    ): Promise<void> {
        return (await ParametersServiceFull.callWithParameters(
            parameterHeader, parameterQuery, parameterForm, parameterCookie, parameterPath, requestBody,
        )).body;
    }

    /**
     * @param parameterHeader This is the parameter that goes into the request header
     * @param parameterQuery This is the parameter that goes into the request query params
     * @param parameterForm This is the parameter that goes into the request form data
     * @param parameterCookie This is the parameter that goes into the cookie
     * @param requestBody This is the parameter that goes into the body
     * @param parameterPath1 This is the parameter that goes into the path
     * @param parameterPath2 This is the parameter that goes into the path
     * @param parameterPath3 This is the parameter that goes into the path
     * @param _default This is the parameter with a reserved keyword

     * @throws ApiError
     */
    public static async callWithWeirdParameterNames(
        parameterHeader: string | null,
        parameterQuery: string | null,
        parameterForm: string | null,
        parameterCookie: string | null,
        requestBody: ModelWithString | null,
        parameterPath1?: string,
        parameterPath2?: string,
        parameterPath3?: string,
        _default?: string,

    ): Promise<void> {
        return (await ParametersServiceFull.callWithWeirdParameterNames(
            parameterHeader, parameterQuery, parameterForm, parameterCookie, requestBody, parameterPath1, parameterPath2, parameterPath3, _default,
        )).body;
    }

    /**
     * @param requestBody This is a required parameter
     * @param parameter This is an optional parameter

     * @throws ApiError
     */
    public static async getCallWithOptionalParam(
        requestBody: ModelWithString,
        parameter?: string,

    ): Promise<void> {
        return (await ParametersServiceFull.getCallWithOptionalParam(
            requestBody, parameter,
        )).body;
    }

    /**
     * @param parameter This is a required parameter
     * @param requestBody This is an optional parameter

     * @throws ApiError
     */
    public static async postCallWithOptionalParam(
        parameter: string,
        requestBody?: ModelWithString,

    ): Promise<void> {
        return (await ParametersServiceFull.postCallWithOptionalParam(
            parameter, requestBody,
        )).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/ParametersServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class ParametersServiceFull {

    /**
     * @param parameterHeader This is the parameter that goes into the header
     * @param parameterQuery This is the parameter that goes into the query params
     * @param parameterForm This is the parameter that goes into the form data
     * @param parameterCookie This is the parameter that goes into the cookie
     * @param parameterPath This is the parameter that goes into the path
     * @param requestBody This is the parameter that goes into the body

     * @throws ApiError
     */
    public static async callWithParameters(
        parameterHeader: string | null,
        parameterQuery: string | null,
        parameterForm: string | null,
        parameterCookie: string | null,
        parameterPath: string | null,
        requestBody: ModelWithString | null,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/parameters/\${parameterPath}\`,
            cookies: {
                'parameterCookie': parameterCookie,
            },
            headers: {
                'parameterHeader': parameterHeader,
            },
            query: {
                'parameterQuery': parameterQuery,
            },
            formData: {
                'parameterForm': parameterForm,
            },
            body: requestBody,
            mediaType: 'application/json',
        });
    }

    /**
     * @param parameterHeader This is the parameter that goes into the request header
     * @param parameterQuery This is the parameter that goes into the request query params
     * @param parameterForm This is the parameter that goes into the request form data
     * @param parameterCookie This is the parameter that goes into the cookie
     * @param requestBody This is the parameter that goes into the body
     * @param parameterPath1 This is the parameter that goes into the path
     * @param parameterPath2 This is the parameter that goes into the path
     * @param parameterPath3 This is the parameter that goes into the path
     * @param _default This is the parameter with a reserved keyword

     * @throws ApiError
     */
    public static async callWithWeirdParameterNames(
        parameterHeader: string | null,
        parameterQuery: string | null,
        parameterForm: string | null,
        parameterCookie: string | null,
        requestBody: ModelWithString | null,
        parameterPath1?: string,
        parameterPath2?: string,
        parameterPath3?: string,
        _default?: string,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/parameters/\${parameterPath1}/\${parameterPath2}/\${parameterPath3}\`,
            cookies: {
                'PARAMETER-COOKIE': parameterCookie,
            },
            headers: {
                'parameter.header': parameterHeader,
            },
            query: {
                'parameter-query': parameterQuery,
                'default': _default,
            },
            formData: {
                'parameter_form': parameterForm,
            },
            body: requestBody,
            mediaType: 'application/json',
        });
    }

    /**
     * @param requestBody This is a required parameter
     * @param parameter This is an optional parameter

     * @throws ApiError
     */
    public static async getCallWithOptionalParam(
        requestBody: ModelWithString,
        parameter?: string,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/parameters/\`,
            query: {
                'parameter': parameter,
            },
            body: requestBody,
            mediaType: 'application/json',
        });
    }

    /**
     * @param parameter This is a required parameter
     * @param requestBody This is an optional parameter

     * @throws ApiError
     */
    public static async postCallWithOptionalParam(
        parameter: string,
        requestBody?: ModelWithString,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/parameters/\`,
            query: {
                'parameter': parameter,
            },
            body: requestBody,
            mediaType: 'application/json',
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/RequestBodyService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import { RequestBodyServiceFull } from './RequestBodyServiceFull';

export class RequestBodyService {

    /**
     * @param requestBody A reusable request body

     * @throws ApiError
     */
    public static async postRequestBodyService(
        requestBody?: ModelWithString,

    ): Promise<void> {
        return (await RequestBodyServiceFull.postRequestBodyService(
            requestBody,
        )).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/RequestBodyServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class RequestBodyServiceFull {

    /**
     * @param requestBody A reusable request body

     * @throws ApiError
     */
    public static async postRequestBodyService(
        requestBody?: ModelWithString,

    ): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/requestBody/\`,
            body: requestBody,
            mediaType: 'application/json',
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/ResponseService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelThatExtends,
    ModelThatExtendsExtends,
    ModelWithString,
} from '../models';
import { ResponseServiceFull } from './ResponseServiceFull';

export class ResponseService {

    /**

     * @returns ModelWithString
     * @throws ApiError
     */
    public static async callWithResponse(): Promise<ModelWithString> {
        return (await ResponseServiceFull.callWithResponse()).body;
    }

    /**

     * @returns ModelWithString Message for default response
     * @throws ApiError
     */
    public static async callWithDuplicateResponses(): Promise<ModelWithString> {
        return (await ResponseServiceFull.callWithDuplicateResponses()).body;
    }

    /**

     * @returns any Message for 200 response
     * @returns ModelWithString Message for default response
     * @returns ModelThatExtends Message for 201 response
     * @returns ModelThatExtendsExtends Message for 202 response
     * @throws ApiError
     */
    public static async callWithResponses(): Promise<{
        readonly '@namespace.string'?: string,
        readonly '@namespace.integer'?: number,
        readonly value?: Array<ModelWithString>,
    } | ModelWithString | ModelThatExtends | ModelThatExtendsExtends> {
        return (await ResponseServiceFull.callWithResponses()).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/ResponseServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type {
    ModelThatExtends,
    ModelThatExtendsExtends,
    ModelWithString,
} from '../models';
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class ResponseServiceFull {

    /**

     * @returns ModelWithString
     * @throws ApiError
     */
    public static async callWithResponse(): Promise<ApiResult<ModelWithString>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/response\`,
        });
    }

    /**

     * @returns ModelWithString Message for default response
     * @throws ApiError
     */
    public static async callWithDuplicateResponses(): Promise<ApiResult<ModelWithString>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/response\`,
            errors: {
                500: \`Message for 500 error\`,
                501: \`Message for 501 error\`,
                502: \`Message for 502 error\`,
            },
        });
    }

    /**

     * @returns any Message for 200 response
     * @returns ModelWithString Message for default response
     * @returns ModelThatExtends Message for 201 response
     * @returns ModelThatExtendsExtends Message for 202 response
     * @throws ApiError
     */
    public static async callWithResponses(): Promise<ApiResult<{
        readonly '@namespace.string'?: string,
        readonly '@namespace.integer'?: number,
        readonly value?: Array<ModelWithString>,
    } | ModelWithString | ModelThatExtends | ModelThatExtendsExtends>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/response\`,
            errors: {
                500: \`Message for 500 error\`,
                501: \`Message for 501 error\`,
                502: \`Message for 502 error\`,
            },
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/SimpleService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { SimpleServiceFull } from './SimpleServiceFull';

export class SimpleService {

    /**

     * @throws ApiError
     */
    public static async getCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.getCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async putCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.putCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async postCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.postCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async deleteCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.deleteCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async optionsCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.optionsCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async headCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.headCallWithoutParametersAndResponse()).body;
    }

    /**

     * @throws ApiError
     */
    public static async patchCallWithoutParametersAndResponse(): Promise<void> {
        return (await SimpleServiceFull.patchCallWithoutParametersAndResponse()).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/SimpleServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class SimpleServiceFull {

    /**

     * @throws ApiError
     */
    public static async getCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async putCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'PUT',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async postCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async deleteCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'DELETE',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async optionsCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'OPTIONS',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async headCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'HEAD',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

    /**

     * @throws ApiError
     */
    public static async patchCallWithoutParametersAndResponse(): Promise<ApiResult<void>> {
        return __request({
            method: 'PATCH',
            path: \`/api/v\${OpenAPI.version}/simple\`,
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/TypesService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { TypesServiceFull } from './TypesServiceFull';

export class TypesService {

    /**
     * @param parameterArray This is an array parameter
     * @param parameterDictionary This is a dictionary parameter
     * @param parameterEnum This is an enum parameter
     * @param parameterNumber This is a number parameter
     * @param parameterString This is a string parameter
     * @param parameterBoolean This is a boolean parameter
     * @param parameterObject This is an object parameter
     * @param id This is a number parameter

     * @returns number Response is a simple number
     * @returns string Response is a simple string
     * @returns boolean Response is a simple boolean
     * @returns any Response is a simple object
     * @throws ApiError
     */
    public static async types(
        parameterArray: Array<string> | null,
        parameterDictionary: any,
        parameterEnum: 'Success' | 'Warning' | 'Error' | null,
        parameterNumber: number = 123,
        parameterString: string | null = 'default',
        parameterBoolean: boolean | null = true,
        parameterObject: any = null,
        id?: number,

    ): Promise<number | string | boolean | any> {
        return (await TypesServiceFull.types(
            parameterArray, parameterDictionary, parameterEnum, parameterNumber, parameterString, parameterBoolean, parameterObject, id,
        )).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/TypesServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class TypesServiceFull {

    /**
     * @param parameterArray This is an array parameter
     * @param parameterDictionary This is a dictionary parameter
     * @param parameterEnum This is an enum parameter
     * @param parameterNumber This is a number parameter
     * @param parameterString This is a string parameter
     * @param parameterBoolean This is a boolean parameter
     * @param parameterObject This is an object parameter
     * @param id This is a number parameter

     * @returns number Response is a simple number
     * @returns string Response is a simple string
     * @returns boolean Response is a simple boolean
     * @returns any Response is a simple object
     * @throws ApiError
     */
    public static async types(
        parameterArray: Array<string> | null,
        parameterDictionary: any,
        parameterEnum: 'Success' | 'Warning' | 'Error' | null,
        parameterNumber: number = 123,
        parameterString: string | null = 'default',
        parameterBoolean: boolean | null = true,
        parameterObject: any = null,
        id?: number,

    ): Promise<ApiResult<number | string | boolean | any>> {
        return __request({
            method: 'GET',
            path: \`/api/v\${OpenAPI.version}/types\`,
            query: {
                'parameterArray': parameterArray,
                'parameterDictionary': parameterDictionary,
                'parameterEnum': parameterEnum,
                'parameterNumber': parameterNumber,
                'parameterString': parameterString,
                'parameterBoolean': parameterBoolean,
                'parameterObject': parameterObject,
            },
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/UploadService.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import { UploadServiceFull } from './UploadServiceFull';

export class UploadService {

    /**
     * @param file Supply a file reference for upload

     * @returns boolean
     * @throws ApiError
     */
    public static async uploadFile(
        file: Blob,

    ): Promise<boolean> {
        return (await UploadServiceFull.uploadFile(
            file,
        )).body;
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/UploadServiceFull.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApiResult } from '../core';
import {
    request as __request,
    OpenAPI,
} from '../core';

export class UploadServiceFull {

    /**
     * @param file Supply a file reference for upload

     * @returns boolean
     * @throws ApiError
     */
    public static async uploadFile(
        file: Blob,

    ): Promise<ApiResult<boolean>> {
        return __request({
            method: 'POST',
            path: \`/api/v\${OpenAPI.version}/upload\`,
            formData: {
                'file': file,
            },
        });
    }

}"
`;

exports[`v3 should generate: ./test/generated/v3/services/index.ts 1`] = `
"/* DO NOT EDIT THIS FILE, IT IS GENERATED FROM THE OPEN API SPECIFICATION */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
export { CollectionFormatService } from './CollectionFormatService';
export { CollectionFormatServiceFull } from './CollectionFormatServiceFull';
export { ComplexService } from './ComplexService';
export { ComplexServiceFull } from './ComplexServiceFull';
export { DefaultsService } from './DefaultsService';
export { DefaultsServiceFull } from './DefaultsServiceFull';
export { DuplicateService } from './DuplicateService';
export { DuplicateServiceFull } from './DuplicateServiceFull';
export { HeaderService } from './HeaderService';
export { HeaderServiceFull } from './HeaderServiceFull';
export { MultipartService } from './MultipartService';
export { MultipartServiceFull } from './MultipartServiceFull';
export { NoContentService } from './NoContentService';
export { NoContentServiceFull } from './NoContentServiceFull';
export { ParametersService } from './ParametersService';
export { ParametersServiceFull } from './ParametersServiceFull';
export { RequestBodyService } from './RequestBodyService';
export { RequestBodyServiceFull } from './RequestBodyServiceFull';
export { ResponseService } from './ResponseService';
export { ResponseServiceFull } from './ResponseServiceFull';
export { SimpleService } from './SimpleService';
export { SimpleServiceFull } from './SimpleServiceFull';
export { TypesService } from './TypesService';
export { TypesServiceFull } from './TypesServiceFull';
export { UploadService } from './UploadService';
export { UploadServiceFull } from './UploadServiceFull';
"
`;
